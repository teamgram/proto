/*
 * WARNING! All changes made in this file will be lost!
 * Created from 'scheme.tl' by 'mtprotoc'
 *
 * Copyright (c) 2025-present,  Teamgram Authors.
 *  All rights reserved.
 *
 * Author: Benqi (wubenqi@gmail.com)
 */

syntax = "proto3";

package mtproto;

import "google/protobuf/wrappers.proto";
import "schema.tl.core_types.proto";
import "schema.tl.crc32.proto";
import "schema.tl.sync.proto";

option go_package = "github.com/teamgram/proto/mtproto";


message TL_invokeAfterMsg {
    TLConstructor  constructor = 1;
    int64 msg_id = 3;
    bytes query = 4;
}

message TL_invokeAfterMsgs {
    TLConstructor  constructor = 1;
    repeated int64 msg_ids = 3;
    bytes query = 4;
}

message TL_initConnection {
    TLConstructor  constructor = 1;
    int32 api_id = 3;
    string device_model = 4;
    string system_version = 5;
    string app_version = 6;
    string system_lang_code = 7;
    string lang_pack = 8;
    string lang_code = 9;
    InputClientProxy proxy = 10;
    JSONValue params = 11;
    bytes query = 12;
}

message TL_invokeWithLayer {
    TLConstructor  constructor = 1;
    int32 layer = 3;
    bytes query = 4;
}

message TL_invokeWithoutUpdates {
    TLConstructor  constructor = 1;
    bytes query = 3;
}

message TL_invokeWithMessagesRange {
    TLConstructor  constructor = 1;
    MessageRange range = 3;
    bytes query = 4;
}

message TL_invokeWithTakeout {
    TLConstructor  constructor = 1;
    int64 takeout_id = 3;
    bytes query = 4;
}

message TL_invokeWithBusinessConnection {
    TLConstructor  constructor = 1;
    string connection_id = 3;
    bytes query = 4;
}

message TL_invokeWithGooglePlayIntegrity {
    TLConstructor  constructor = 1;
    string nonce = 3;
    string token = 4;
    bytes query = 5;
}

message TL_invokeWithApnsSecret {
    TLConstructor  constructor = 1;
    string nonce = 3;
    string secret = 4;
    bytes query = 5;
}

message TL_invokeWithReCaptcha {
    TLConstructor  constructor = 1;
    string token = 3;
    bytes query = 4;
}

message TL_auth_sendCode {
    TLConstructor  constructor = 1;
    string phone_number = 3;
    int32 api_id = 4;
    string api_hash = 5;
    CodeSettings settings = 6;
}

message TL_auth_signUp {
    TLConstructor  constructor = 1;
    bool no_joined_notifications = 3;
    string phone_number = 4;
    string phone_code_hash = 5;
    string first_name = 6;
    string last_name = 7;
}

message TL_auth_signIn {
    TLConstructor  constructor = 1;
    string phone_number = 3;
    string phone_code_hash = 4;
    google.protobuf.StringValue phone_code_FLAGSTRING = 5;
    EmailVerification email_verification = 6;
    string phone_code_STRING = 7;
}

message TL_auth_logOut {
    TLConstructor  constructor = 1;
}

message TL_auth_resetAuthorizations {
    TLConstructor  constructor = 1;
}

message TL_auth_exportAuthorization {
    TLConstructor  constructor = 1;
    int32 dc_id = 3;
}

message TL_auth_importAuthorization {
    TLConstructor  constructor = 1;
    int64 id = 3;
    bytes bytes = 4;
}

message TL_auth_bindTempAuthKey {
    TLConstructor  constructor = 1;
    int64 perm_auth_key_id = 3;
    int64 nonce = 4;
    int32 expires_at = 5;
    bytes encrypted_message = 6;
}

message TL_auth_importBotAuthorization {
    TLConstructor  constructor = 1;
    int32 flags = 3;
    int32 api_id = 4;
    string api_hash = 5;
    string bot_auth_token = 6;
}

message TL_auth_checkPassword {
    TLConstructor  constructor = 1;
    InputCheckPasswordSRP password = 3;
}

message TL_auth_requestPasswordRecovery {
    TLConstructor  constructor = 1;
}

message TL_auth_recoverPassword {
    TLConstructor  constructor = 1;
    string code = 3;
    account_PasswordInputSettings new_settings = 4;
}

message TL_auth_resendCode {
    TLConstructor  constructor = 1;
    string phone_number = 3;
    string phone_code_hash = 4;
    google.protobuf.StringValue reason = 5;
}

message TL_auth_cancelCode {
    TLConstructor  constructor = 1;
    string phone_number = 3;
    string phone_code_hash = 4;
}

message TL_auth_dropTempAuthKeys {
    TLConstructor  constructor = 1;
    repeated int64 except_auth_keys = 3;
}

message TL_auth_exportLoginToken {
    TLConstructor  constructor = 1;
    int32 api_id = 3;
    string api_hash = 4;
    repeated int64 except_ids = 5;
}

message TL_auth_importLoginToken {
    TLConstructor  constructor = 1;
    bytes token = 3;
}

message TL_auth_acceptLoginToken {
    TLConstructor  constructor = 1;
    bytes token = 3;
}

message TL_auth_checkRecoveryPassword {
    TLConstructor  constructor = 1;
    string code = 3;
}

message TL_auth_importWebTokenAuthorization {
    TLConstructor  constructor = 1;
    int32 api_id = 3;
    string api_hash = 4;
    string web_auth_token = 5;
}

message TL_auth_requestFirebaseSms {
    TLConstructor  constructor = 1;
    string phone_number = 3;
    string phone_code_hash = 4;
    google.protobuf.StringValue safety_net_token = 5;
    google.protobuf.StringValue play_integrity_token = 6;
    google.protobuf.StringValue ios_push_secret = 7;
}

message TL_auth_resetLoginEmail {
    TLConstructor  constructor = 1;
    string phone_number = 3;
    string phone_code_hash = 4;
}

message TL_auth_reportMissingCode {
    TLConstructor  constructor = 1;
    string phone_number = 3;
    string phone_code_hash = 4;
    string mnc = 5;
}

message TL_account_registerDevice {
    TLConstructor  constructor = 1;
    bool no_muted = 3;
    int32 token_type = 4;
    string token = 5;
    Bool app_sandbox = 6;
    bytes secret = 7;
    repeated int64 other_uids = 8;
}

message TL_account_unregisterDevice {
    TLConstructor  constructor = 1;
    int32 token_type = 3;
    string token = 4;
    repeated int64 other_uids = 5;
}

message TL_account_updateNotifySettings {
    TLConstructor  constructor = 1;
    InputNotifyPeer peer = 3;
    InputPeerNotifySettings settings = 4;
}

message TL_account_getNotifySettings {
    TLConstructor  constructor = 1;
    InputNotifyPeer peer = 3;
}

message TL_account_resetNotifySettings {
    TLConstructor  constructor = 1;
}

message TL_account_updateProfile {
    TLConstructor  constructor = 1;
    google.protobuf.StringValue first_name = 3;
    google.protobuf.StringValue last_name = 4;
    google.protobuf.StringValue about = 5;
}

message TL_account_updateStatus {
    TLConstructor  constructor = 1;
    Bool offline = 3;
}

message TL_account_getWallPapers {
    TLConstructor  constructor = 1;
    int64 hash = 3;
}

message TL_account_reportPeer {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    ReportReason reason = 4;
    string message = 5;
}

message TL_account_checkUsername {
    TLConstructor  constructor = 1;
    string username = 3;
}

message TL_account_updateUsername {
    TLConstructor  constructor = 1;
    string username = 3;
}

message TL_account_getPrivacy {
    TLConstructor  constructor = 1;
    InputPrivacyKey key = 3;
}

message TL_account_setPrivacy {
    TLConstructor  constructor = 1;
    InputPrivacyKey key = 3;
    repeated InputPrivacyRule rules = 4;
}

message TL_account_deleteAccount {
    TLConstructor  constructor = 1;
    string reason = 3;
    InputCheckPasswordSRP password = 4;
}

message TL_account_getAccountTTL {
    TLConstructor  constructor = 1;
}

message TL_account_setAccountTTL {
    TLConstructor  constructor = 1;
    AccountDaysTTL ttl = 3;
}

message TL_account_sendChangePhoneCode {
    TLConstructor  constructor = 1;
    string phone_number = 3;
    CodeSettings settings = 4;
}

message TL_account_changePhone {
    TLConstructor  constructor = 1;
    string phone_number = 3;
    string phone_code_hash = 4;
    string phone_code = 5;
}

message TL_account_updateDeviceLocked {
    TLConstructor  constructor = 1;
    int32 period = 3;
}

message TL_account_getAuthorizations {
    TLConstructor  constructor = 1;
}

message TL_account_resetAuthorization {
    TLConstructor  constructor = 1;
    int64 hash = 3;
}

message TL_account_getPassword {
    TLConstructor  constructor = 1;
}

message TL_account_getPasswordSettings {
    TLConstructor  constructor = 1;
    InputCheckPasswordSRP password = 3;
}

message TL_account_updatePasswordSettings {
    TLConstructor  constructor = 1;
    InputCheckPasswordSRP password = 3;
    account_PasswordInputSettings new_settings = 4;
}

message TL_account_sendConfirmPhoneCode {
    TLConstructor  constructor = 1;
    string hash = 3;
    CodeSettings settings = 4;
}

message TL_account_confirmPhone {
    TLConstructor  constructor = 1;
    string phone_code_hash = 3;
    string phone_code = 4;
}

message TL_account_getTmpPassword {
    TLConstructor  constructor = 1;
    InputCheckPasswordSRP password = 3;
    int32 period = 4;
}

message TL_account_getWebAuthorizations {
    TLConstructor  constructor = 1;
}

message TL_account_resetWebAuthorization {
    TLConstructor  constructor = 1;
    int64 hash = 3;
}

message TL_account_resetWebAuthorizations {
    TLConstructor  constructor = 1;
}

message TL_account_getAllSecureValues {
    TLConstructor  constructor = 1;
}

message TL_account_getSecureValue {
    TLConstructor  constructor = 1;
    repeated SecureValueType types = 3;
}

message TL_account_saveSecureValue {
    TLConstructor  constructor = 1;
    InputSecureValue value = 3;
    int64 secure_secret_id = 4;
}

message TL_account_deleteSecureValue {
    TLConstructor  constructor = 1;
    repeated SecureValueType types = 3;
}

message TL_account_getAuthorizationForm {
    TLConstructor  constructor = 1;
    int64 bot_id = 3;
    string scope = 4;
    string public_key = 5;
}

message TL_account_acceptAuthorization {
    TLConstructor  constructor = 1;
    int64 bot_id = 3;
    string scope = 4;
    string public_key = 5;
    repeated SecureValueHash value_hashes = 6;
    SecureCredentialsEncrypted credentials = 7;
}

message TL_account_sendVerifyPhoneCode {
    TLConstructor  constructor = 1;
    string phone_number = 3;
    CodeSettings settings = 4;
}

message TL_account_verifyPhone {
    TLConstructor  constructor = 1;
    string phone_number = 3;
    string phone_code_hash = 4;
    string phone_code = 5;
}

message TL_account_sendVerifyEmailCode {
    TLConstructor  constructor = 1;
    EmailVerifyPurpose purpose = 3;
    string email = 4;
}

message TL_account_verifyEmail32DA4CF {
    TLConstructor  constructor = 1;
    EmailVerifyPurpose purpose = 3;
    EmailVerification verification = 4;
}

message TL_account_initTakeoutSession {
    TLConstructor  constructor = 1;
    bool contacts = 3;
    bool message_users = 4;
    bool message_chats = 5;
    bool message_megagroups = 6;
    bool message_channels = 7;
    bool files = 8;
    google.protobuf.Int64Value file_max_size_FLAGINT64 = 9;
    google.protobuf.Int32Value file_max_size_FLAGINT32 = 10;
}

message TL_account_finishTakeoutSession {
    TLConstructor  constructor = 1;
    bool success = 3;
}

message TL_account_confirmPasswordEmail {
    TLConstructor  constructor = 1;
    string code = 3;
}

message TL_account_resendPasswordEmail {
    TLConstructor  constructor = 1;
}

message TL_account_cancelPasswordEmail {
    TLConstructor  constructor = 1;
}

message TL_account_getContactSignUpNotification {
    TLConstructor  constructor = 1;
}

message TL_account_setContactSignUpNotification {
    TLConstructor  constructor = 1;
    Bool silent = 3;
}

message TL_account_getNotifyExceptions {
    TLConstructor  constructor = 1;
    bool compare_sound = 3;
    bool compare_stories = 4;
    InputNotifyPeer peer = 5;
}

message TL_account_getWallPaper {
    TLConstructor  constructor = 1;
    InputWallPaper wallpaper = 3;
}

message TL_account_uploadWallPaper {
    TLConstructor  constructor = 1;
    bool for_chat = 3;
    InputFile file = 4;
    string mime_type = 5;
    WallPaperSettings settings = 6;
}

message TL_account_saveWallPaper {
    TLConstructor  constructor = 1;
    InputWallPaper wallpaper = 3;
    Bool unsave = 4;
    WallPaperSettings settings = 5;
}

message TL_account_installWallPaper {
    TLConstructor  constructor = 1;
    InputWallPaper wallpaper = 3;
    WallPaperSettings settings = 4;
}

message TL_account_resetWallPapers {
    TLConstructor  constructor = 1;
}

message TL_account_getAutoDownloadSettings {
    TLConstructor  constructor = 1;
}

message TL_account_saveAutoDownloadSettings {
    TLConstructor  constructor = 1;
    bool low = 3;
    bool high = 4;
    AutoDownloadSettings settings = 5;
}

message TL_account_uploadTheme {
    TLConstructor  constructor = 1;
    InputFile file = 3;
    InputFile thumb = 4;
    string file_name = 5;
    string mime_type = 6;
}

message TL_account_createTheme {
    TLConstructor  constructor = 1;
    string slug = 3;
    string title = 4;
    InputDocument document = 5;
    repeated InputThemeSettings settings = 6;
}

message TL_account_updateTheme {
    TLConstructor  constructor = 1;
    string format = 3;
    InputTheme theme = 4;
    google.protobuf.StringValue slug = 5;
    google.protobuf.StringValue title = 6;
    InputDocument document = 7;
    repeated InputThemeSettings settings = 8;
}

message TL_account_saveTheme {
    TLConstructor  constructor = 1;
    InputTheme theme = 3;
    Bool unsave = 4;
}

message TL_account_installTheme {
    TLConstructor  constructor = 1;
    bool dark = 3;
    InputTheme theme = 4;
    google.protobuf.StringValue format = 5;
    BaseTheme base_theme = 6;
}

message TL_account_getTheme {
    TLConstructor  constructor = 1;
    string format = 3;
    InputTheme theme = 4;
    int64 document_id = 5;
}

message TL_account_getThemes {
    TLConstructor  constructor = 1;
    string format = 3;
    int64 hash = 4;
}

message TL_account_setContentSettings {
    TLConstructor  constructor = 1;
    bool sensitive_enabled = 3;
}

message TL_account_getContentSettings {
    TLConstructor  constructor = 1;
}

message TL_account_getMultiWallPapers {
    TLConstructor  constructor = 1;
    repeated InputWallPaper wallpapers = 3;
}

message TL_account_getGlobalPrivacySettings {
    TLConstructor  constructor = 1;
}

message TL_account_setGlobalPrivacySettings {
    TLConstructor  constructor = 1;
    GlobalPrivacySettings settings = 3;
}

message TL_account_reportProfilePhoto {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    InputPhoto photo_id = 4;
    ReportReason reason = 5;
    string message = 6;
}

message TL_account_resetPassword {
    TLConstructor  constructor = 1;
}

message TL_account_declinePasswordReset {
    TLConstructor  constructor = 1;
}

message TL_account_getChatThemes {
    TLConstructor  constructor = 1;
    int64 hash = 3;
}

message TL_account_setAuthorizationTTL {
    TLConstructor  constructor = 1;
    int32 authorization_ttl_days = 3;
}

message TL_account_changeAuthorizationSettings {
    TLConstructor  constructor = 1;
    bool confirmed = 3;
    int64 hash = 4;
    Bool encrypted_requests_disabled = 5;
    Bool call_requests_disabled = 6;
}

message TL_account_getSavedRingtones {
    TLConstructor  constructor = 1;
    int64 hash = 3;
}

message TL_account_saveRingtone {
    TLConstructor  constructor = 1;
    InputDocument id = 3;
    Bool unsave = 4;
}

message TL_account_uploadRingtone {
    TLConstructor  constructor = 1;
    InputFile file = 3;
    string file_name = 4;
    string mime_type = 5;
}

message TL_account_updateEmojiStatus {
    TLConstructor  constructor = 1;
    EmojiStatus emoji_status = 3;
}

message TL_account_getDefaultEmojiStatuses {
    TLConstructor  constructor = 1;
    int64 hash = 3;
}

message TL_account_getRecentEmojiStatuses {
    TLConstructor  constructor = 1;
    int64 hash = 3;
}

message TL_account_clearRecentEmojiStatuses {
    TLConstructor  constructor = 1;
}

message TL_account_reorderUsernames {
    TLConstructor  constructor = 1;
    repeated string order = 3;
}

message TL_account_toggleUsername {
    TLConstructor  constructor = 1;
    string username = 3;
    Bool active = 4;
}

message TL_account_getDefaultProfilePhotoEmojis {
    TLConstructor  constructor = 1;
    int64 hash = 3;
}

message TL_account_getDefaultGroupPhotoEmojis {
    TLConstructor  constructor = 1;
    int64 hash = 3;
}

message TL_account_getAutoSaveSettings {
    TLConstructor  constructor = 1;
}

message TL_account_saveAutoSaveSettings {
    TLConstructor  constructor = 1;
    bool users = 3;
    bool chats = 4;
    bool broadcasts = 5;
    InputPeer peer = 6;
    AutoSaveSettings settings = 7;
}

message TL_account_deleteAutoSaveExceptions {
    TLConstructor  constructor = 1;
}

message TL_account_invalidateSignInCodes {
    TLConstructor  constructor = 1;
    repeated string codes = 3;
}

message TL_account_updateColor {
    TLConstructor  constructor = 1;
    bool for_profile = 3;
    google.protobuf.Int32Value color_FLAGINT32 = 4;
    google.protobuf.Int64Value background_emoji_id = 5;
    int32 color_INT32 = 6;
}

message TL_account_getDefaultBackgroundEmojis {
    TLConstructor  constructor = 1;
    int64 hash = 3;
}

message TL_account_getChannelDefaultEmojiStatuses {
    TLConstructor  constructor = 1;
    int64 hash = 3;
}

message TL_account_getChannelRestrictedStatusEmojis {
    TLConstructor  constructor = 1;
    int64 hash = 3;
}

message TL_account_updateBusinessWorkHours {
    TLConstructor  constructor = 1;
    BusinessWorkHours business_work_hours = 3;
}

message TL_account_updateBusinessLocation {
    TLConstructor  constructor = 1;
    InputGeoPoint geo_point = 3;
    google.protobuf.StringValue address = 4;
}

message TL_account_updateBusinessGreetingMessage {
    TLConstructor  constructor = 1;
    InputBusinessGreetingMessage message = 3;
}

message TL_account_updateBusinessAwayMessage {
    TLConstructor  constructor = 1;
    InputBusinessAwayMessage message = 3;
}

message TL_account_updateConnectedBot {
    TLConstructor  constructor = 1;
    bool deleted = 3;
    BusinessBotRights rights = 4;
    InputUser bot = 5;
    InputBusinessBotRecipients recipients_INPUTBUSINESSBOTRECIPIENTS = 6;
    bool can_reply = 7;
    InputBusinessRecipients recipients_INPUTBUSINESSRECIPIENTS = 8;
}

message TL_account_getConnectedBots {
    TLConstructor  constructor = 1;
}

message TL_account_getBotBusinessConnection {
    TLConstructor  constructor = 1;
    string connection_id = 3;
}

message TL_account_updateBusinessIntro {
    TLConstructor  constructor = 1;
    InputBusinessIntro intro = 3;
}

message TL_account_toggleConnectedBotPaused {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    Bool paused = 4;
}

message TL_account_disablePeerConnectedBot {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
}

message TL_account_updateBirthday {
    TLConstructor  constructor = 1;
    Birthday birthday = 3;
}

message TL_account_createBusinessChatLink {
    TLConstructor  constructor = 1;
    InputBusinessChatLink link = 3;
}

message TL_account_editBusinessChatLink {
    TLConstructor  constructor = 1;
    string slug = 3;
    InputBusinessChatLink link = 4;
}

message TL_account_deleteBusinessChatLink {
    TLConstructor  constructor = 1;
    string slug = 3;
}

message TL_account_getBusinessChatLinks {
    TLConstructor  constructor = 1;
}

message TL_account_resolveBusinessChatLink {
    TLConstructor  constructor = 1;
    string slug = 3;
}

message TL_account_updatePersonalChannel {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
}

message TL_account_toggleSponsoredMessages {
    TLConstructor  constructor = 1;
    Bool enabled = 3;
}

message TL_account_getReactionsNotifySettings {
    TLConstructor  constructor = 1;
}

message TL_account_setReactionsNotifySettings {
    TLConstructor  constructor = 1;
    ReactionsNotifySettings settings = 3;
}

message TL_account_getCollectibleEmojiStatuses {
    TLConstructor  constructor = 1;
    int64 hash = 3;
}

message TL_account_addNoPaidMessagesException {
    TLConstructor  constructor = 1;
    bool refund_charged = 3;
    InputUser user_id = 4;
}

message TL_account_getPaidMessagesRevenue {
    TLConstructor  constructor = 1;
    InputUser user_id = 3;
}

message TL_users_getUsers {
    TLConstructor  constructor = 1;
    repeated InputUser id = 3;
}

message TL_users_getFullUser {
    TLConstructor  constructor = 1;
    InputUser id = 3;
}

message TL_users_setSecureValueErrors {
    TLConstructor  constructor = 1;
    InputUser id = 3;
    repeated SecureValueError errors = 4;
}

message TL_users_getRequirementsToContact {
    TLConstructor  constructor = 1;
    repeated InputUser id = 3;
}

message TL_contacts_getContactIDs {
    TLConstructor  constructor = 1;
    int64 hash = 3;
}

message TL_contacts_getStatuses {
    TLConstructor  constructor = 1;
}

message TL_contacts_getContacts {
    TLConstructor  constructor = 1;
    int64 hash = 3;
}

message TL_contacts_importContacts {
    TLConstructor  constructor = 1;
    repeated InputContact contacts = 3;
}

message TL_contacts_deleteContacts {
    TLConstructor  constructor = 1;
    repeated InputUser id = 3;
}

message TL_contacts_deleteByPhones {
    TLConstructor  constructor = 1;
    repeated string phones = 3;
}

message TL_contacts_block {
    TLConstructor  constructor = 1;
    bool my_stories_from = 3;
    InputPeer id = 4;
}

message TL_contacts_unblock {
    TLConstructor  constructor = 1;
    bool my_stories_from = 3;
    InputPeer id = 4;
}

message TL_contacts_getBlocked {
    TLConstructor  constructor = 1;
    bool my_stories_from = 3;
    int32 offset = 4;
    int32 limit = 5;
}

message TL_contacts_search {
    TLConstructor  constructor = 1;
    string q = 3;
    int32 limit = 4;
}

message TL_contacts_resolveUsername {
    TLConstructor  constructor = 1;
    string username = 3;
    google.protobuf.StringValue referer = 4;
}

message TL_contacts_getTopPeers {
    TLConstructor  constructor = 1;
    bool correspondents = 3;
    bool bots_pm = 4;
    bool bots_inline = 5;
    bool phone_calls = 6;
    bool forward_users = 7;
    bool forward_chats = 8;
    bool groups = 9;
    bool channels = 10;
    bool bots_app = 11;
    int32 offset = 12;
    int32 limit = 13;
    int64 hash = 14;
}

message TL_contacts_resetTopPeerRating {
    TLConstructor  constructor = 1;
    TopPeerCategory category = 3;
    InputPeer peer = 4;
}

message TL_contacts_resetSaved {
    TLConstructor  constructor = 1;
}

message TL_contacts_getSaved {
    TLConstructor  constructor = 1;
}

message TL_contacts_toggleTopPeers {
    TLConstructor  constructor = 1;
    Bool enabled = 3;
}

message TL_contacts_addContact {
    TLConstructor  constructor = 1;
    bool add_phone_privacy_exception = 3;
    InputUser id = 4;
    string first_name = 5;
    string last_name = 6;
    string phone = 7;
}

message TL_contacts_acceptContact {
    TLConstructor  constructor = 1;
    InputUser id = 3;
}

message TL_contacts_getLocated {
    TLConstructor  constructor = 1;
    bool background = 3;
    InputGeoPoint geo_point = 4;
    google.protobuf.Int32Value self_expires = 5;
}

message TL_contacts_blockFromReplies {
    TLConstructor  constructor = 1;
    bool delete_message = 3;
    bool delete_history = 4;
    bool report_spam = 5;
    int32 msg_id = 6;
}

message TL_contacts_resolvePhone {
    TLConstructor  constructor = 1;
    string phone = 3;
}

message TL_contacts_exportContactToken {
    TLConstructor  constructor = 1;
}

message TL_contacts_importContactToken {
    TLConstructor  constructor = 1;
    string token = 3;
}

message TL_contacts_editCloseFriends {
    TLConstructor  constructor = 1;
    repeated int64 id = 3;
}

message TL_contacts_setBlocked {
    TLConstructor  constructor = 1;
    bool my_stories_from = 3;
    repeated InputPeer id = 4;
    int32 limit = 5;
}

message TL_contacts_getBirthdays {
    TLConstructor  constructor = 1;
}

message TL_contacts_getSponsoredPeers {
    TLConstructor  constructor = 1;
    string q = 3;
}

message TL_messages_getMessages {
    TLConstructor  constructor = 1;
    repeated InputMessage id_VECTORINPUTMESSAGE = 3;
    repeated int32 id_VECTORINT32 = 4;
}

message TL_messages_getDialogs {
    TLConstructor  constructor = 1;
    bool exclude_pinned = 3;
    google.protobuf.Int32Value folder_id = 4;
    int32 offset_date = 5;
    int32 offset_id = 6;
    InputPeer offset_peer = 7;
    int32 limit = 8;
    int64 hash = 9;
}

message TL_messages_getHistory {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 offset_id = 4;
    int32 offset_date = 5;
    int32 add_offset = 6;
    int32 limit = 7;
    int32 max_id = 8;
    int32 min_id = 9;
    int64 hash = 10;
}

message TL_messages_search {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    string q = 4;
    InputPeer from_id = 5;
    InputPeer saved_peer_id = 6;
    repeated Reaction saved_reaction = 7;
    google.protobuf.Int32Value top_msg_id = 8;
    MessagesFilter filter = 9;
    int32 min_date = 10;
    int32 max_date = 11;
    int32 offset_id = 12;
    int32 add_offset = 13;
    int32 limit = 14;
    int32 max_id = 15;
    int32 min_id = 16;
    int64 hash = 17;
}

message TL_messages_readHistory {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 max_id = 4;
}

message TL_messages_deleteHistory {
    TLConstructor  constructor = 1;
    bool just_clear = 3;
    bool revoke = 4;
    InputPeer peer = 5;
    int32 max_id = 6;
    google.protobuf.Int32Value min_date = 7;
    google.protobuf.Int32Value max_date = 8;
}

message TL_messages_deleteMessages {
    TLConstructor  constructor = 1;
    bool revoke = 3;
    repeated int32 id = 4;
}

message TL_messages_receivedMessages {
    TLConstructor  constructor = 1;
    int32 max_id = 3;
}

message TL_messages_setTyping {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    google.protobuf.Int32Value top_msg_id = 4;
    SendMessageAction action = 5;
}

message TL_messages_sendMessage {
    TLConstructor  constructor = 1;
    bool no_webpage = 3;
    bool silent = 4;
    bool background = 5;
    bool clear_draft = 6;
    bool noforwards = 7;
    bool update_stickersets_order = 8;
    bool invert_media = 9;
    bool allow_paid_floodskip = 10;
    InputPeer peer = 11;
    InputReplyTo reply_to = 12;
    string message = 13;
    int64 random_id = 14;
    ReplyMarkup reply_markup = 15;
    repeated MessageEntity entities = 16;
    google.protobuf.Int32Value schedule_date = 17;
    InputPeer send_as = 18;
    InputQuickReplyShortcut quick_reply_shortcut = 19;
    google.protobuf.Int64Value effect = 20;
    google.protobuf.Int64Value allow_paid_stars = 21;
    google.protobuf.Int32Value reply_to_msg_id = 22;
    google.protobuf.Int32Value top_msg_id = 23;
}

message TL_messages_sendMedia {
    TLConstructor  constructor = 1;
    bool silent = 3;
    bool background = 4;
    bool clear_draft = 5;
    bool noforwards = 6;
    bool update_stickersets_order = 7;
    bool invert_media = 8;
    bool allow_paid_floodskip = 9;
    InputPeer peer = 10;
    InputReplyTo reply_to = 11;
    InputMedia media = 12;
    string message = 13;
    int64 random_id = 14;
    ReplyMarkup reply_markup = 15;
    repeated MessageEntity entities = 16;
    google.protobuf.Int32Value schedule_date = 17;
    InputPeer send_as = 18;
    InputQuickReplyShortcut quick_reply_shortcut = 19;
    google.protobuf.Int64Value effect = 20;
    google.protobuf.Int64Value allow_paid_stars = 21;
    google.protobuf.Int32Value reply_to_msg_id = 22;
    google.protobuf.Int32Value top_msg_id = 23;
}

message TL_messages_forwardMessages {
    TLConstructor  constructor = 1;
    bool silent = 3;
    bool background = 4;
    bool with_my_score = 5;
    bool drop_author = 6;
    bool drop_media_captions = 7;
    bool noforwards = 8;
    bool allow_paid_floodskip = 9;
    InputPeer from_peer = 10;
    repeated int32 id = 11;
    repeated int64 random_id = 12;
    InputPeer to_peer = 13;
    google.protobuf.Int32Value top_msg_id = 14;
    google.protobuf.Int32Value schedule_date = 15;
    InputPeer send_as = 16;
    InputQuickReplyShortcut quick_reply_shortcut = 17;
    google.protobuf.Int32Value video_timestamp = 18;
    google.protobuf.Int64Value allow_paid_stars = 19;
}

message TL_messages_reportSpam {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
}

message TL_messages_getPeerSettings {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
}

message TL_messages_reportFC78AF9B {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    repeated int32 id = 4;
    bytes option = 5;
    string message = 6;
}

message TL_messages_getChats {
    TLConstructor  constructor = 1;
    repeated int64 id = 3;
}

message TL_messages_getFullChat {
    TLConstructor  constructor = 1;
    int64 chat_id = 3;
}

message TL_messages_editChatTitle {
    TLConstructor  constructor = 1;
    int64 chat_id = 3;
    string title = 4;
}

message TL_messages_editChatPhoto {
    TLConstructor  constructor = 1;
    int64 chat_id = 3;
    InputChatPhoto photo = 4;
}

message TL_messages_addChatUserCBC6D107 {
    TLConstructor  constructor = 1;
    int64 chat_id = 3;
    InputUser user_id = 4;
    int32 fwd_limit = 5;
}

message TL_messages_deleteChatUser {
    TLConstructor  constructor = 1;
    bool revoke_history = 3;
    int64 chat_id = 4;
    InputUser user_id = 5;
}

message TL_messages_createChat92CEDDD4 {
    TLConstructor  constructor = 1;
    repeated InputUser users = 3;
    string title = 4;
    google.protobuf.Int32Value ttl_period = 5;
}

message TL_messages_getDhConfig {
    TLConstructor  constructor = 1;
    int32 version = 3;
    int32 random_length = 4;
}

message TL_messages_requestEncryption {
    TLConstructor  constructor = 1;
    InputUser user_id = 3;
    int32 random_id = 4;
    bytes g_a = 5;
}

message TL_messages_acceptEncryption {
    TLConstructor  constructor = 1;
    InputEncryptedChat peer = 3;
    bytes g_b = 4;
    int64 key_fingerprint = 5;
}

message TL_messages_discardEncryption {
    TLConstructor  constructor = 1;
    bool delete_history = 3;
    int32 chat_id = 4;
}

message TL_messages_setEncryptedTyping {
    TLConstructor  constructor = 1;
    InputEncryptedChat peer = 3;
    Bool typing = 4;
}

message TL_messages_readEncryptedHistory {
    TLConstructor  constructor = 1;
    InputEncryptedChat peer = 3;
    int32 max_date = 4;
}

message TL_messages_sendEncrypted {
    TLConstructor  constructor = 1;
    bool silent = 3;
    InputEncryptedChat peer = 4;
    int64 random_id = 5;
    bytes data = 6;
}

message TL_messages_sendEncryptedFile {
    TLConstructor  constructor = 1;
    bool silent = 3;
    InputEncryptedChat peer = 4;
    int64 random_id = 5;
    bytes data = 6;
    InputEncryptedFile file = 7;
}

message TL_messages_sendEncryptedService {
    TLConstructor  constructor = 1;
    InputEncryptedChat peer = 3;
    int64 random_id = 4;
    bytes data = 5;
}

message TL_messages_receivedQueue {
    TLConstructor  constructor = 1;
    int32 max_qts = 3;
}

message TL_messages_reportEncryptedSpam {
    TLConstructor  constructor = 1;
    InputEncryptedChat peer = 3;
}

message TL_messages_readMessageContents {
    TLConstructor  constructor = 1;
    repeated int32 id = 3;
}

message TL_messages_getStickers {
    TLConstructor  constructor = 1;
    string emoticon = 3;
    int64 hash = 4;
}

message TL_messages_getAllStickers {
    TLConstructor  constructor = 1;
    int64 hash = 3;
}

message TL_messages_getWebPagePreview570D6F6F {
    TLConstructor  constructor = 1;
    string message = 3;
    repeated MessageEntity entities = 4;
}

message TL_messages_exportChatInvite {
    TLConstructor  constructor = 1;
    bool legacy_revoke_permanent = 3;
    bool request_needed = 4;
    InputPeer peer = 5;
    google.protobuf.Int32Value expire_date = 6;
    google.protobuf.Int32Value usage_limit = 7;
    google.protobuf.StringValue title = 8;
    StarsSubscriptionPricing subscription_pricing = 9;
}

message TL_messages_checkChatInvite {
    TLConstructor  constructor = 1;
    string hash = 3;
}

message TL_messages_importChatInvite {
    TLConstructor  constructor = 1;
    string hash = 3;
}

message TL_messages_getStickerSet {
    TLConstructor  constructor = 1;
    InputStickerSet stickerset = 3;
    int32 hash = 4;
}

message TL_messages_installStickerSet {
    TLConstructor  constructor = 1;
    InputStickerSet stickerset = 3;
    Bool archived = 4;
}

message TL_messages_uninstallStickerSet {
    TLConstructor  constructor = 1;
    InputStickerSet stickerset = 3;
}

message TL_messages_startBot {
    TLConstructor  constructor = 1;
    InputUser bot = 3;
    InputPeer peer = 4;
    int64 random_id = 5;
    string start_param = 6;
}

message TL_messages_getMessagesViews {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    repeated int32 id = 4;
    Bool increment = 5;
}

message TL_messages_editChatAdmin {
    TLConstructor  constructor = 1;
    int64 chat_id = 3;
    InputUser user_id = 4;
    Bool is_admin = 5;
}

message TL_messages_migrateChat {
    TLConstructor  constructor = 1;
    int64 chat_id = 3;
}

message TL_messages_searchGlobal {
    TLConstructor  constructor = 1;
    bool broadcasts_only = 3;
    bool groups_only = 4;
    bool users_only = 5;
    google.protobuf.Int32Value folder_id = 6;
    string q = 7;
    MessagesFilter filter = 8;
    int32 min_date = 9;
    int32 max_date = 10;
    int32 offset_rate = 11;
    InputPeer offset_peer = 12;
    int32 offset_id = 13;
    int32 limit = 14;
}

message TL_messages_reorderStickerSets {
    TLConstructor  constructor = 1;
    bool masks = 3;
    bool emojis = 4;
    repeated int64 order = 5;
}

message TL_messages_getDocumentByHash {
    TLConstructor  constructor = 1;
    bytes sha256 = 3;
    int64 size2_INT64 = 4;
    string mime_type = 5;
    int32 size2_INT32 = 6;
}

message TL_messages_getSavedGifs {
    TLConstructor  constructor = 1;
    int64 hash = 3;
}

message TL_messages_saveGif {
    TLConstructor  constructor = 1;
    InputDocument id = 3;
    Bool unsave = 4;
}

message TL_messages_getInlineBotResults {
    TLConstructor  constructor = 1;
    InputUser bot = 3;
    InputPeer peer = 4;
    InputGeoPoint geo_point = 5;
    string query = 6;
    string offset = 7;
}

message TL_messages_setInlineBotResults {
    TLConstructor  constructor = 1;
    bool gallery = 3;
    bool private = 4;
    int64 query_id = 5;
    repeated InputBotInlineResult results = 6;
    int32 cache_time = 7;
    google.protobuf.StringValue next_offset = 8;
    InlineBotSwitchPM switch_pm = 9;
    InlineBotWebView switch_webview = 10;
}

message TL_messages_sendInlineBotResult {
    TLConstructor  constructor = 1;
    bool silent = 3;
    bool background = 4;
    bool clear_draft = 5;
    bool hide_via = 6;
    InputPeer peer = 7;
    InputReplyTo reply_to = 8;
    int64 random_id = 9;
    int64 query_id = 10;
    string id = 11;
    google.protobuf.Int32Value schedule_date = 12;
    InputPeer send_as = 13;
    InputQuickReplyShortcut quick_reply_shortcut = 14;
    google.protobuf.Int64Value allow_paid_stars = 15;
    google.protobuf.Int32Value reply_to_msg_id = 16;
    google.protobuf.Int32Value top_msg_id = 17;
}

message TL_messages_getMessageEditData {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 id = 4;
}

message TL_messages_editMessage {
    TLConstructor  constructor = 1;
    bool no_webpage = 3;
    bool invert_media = 4;
    InputPeer peer = 5;
    int32 id = 6;
    google.protobuf.StringValue message = 7;
    InputMedia media = 8;
    ReplyMarkup reply_markup = 9;
    repeated MessageEntity entities = 10;
    google.protobuf.Int32Value schedule_date = 11;
    google.protobuf.Int32Value quick_reply_shortcut_id = 12;
}

message TL_messages_editInlineBotMessage {
    TLConstructor  constructor = 1;
    bool no_webpage = 3;
    bool invert_media = 4;
    InputBotInlineMessageID id = 5;
    google.protobuf.StringValue message = 6;
    InputMedia media = 7;
    ReplyMarkup reply_markup = 8;
    repeated MessageEntity entities = 9;
}

message TL_messages_getBotCallbackAnswer {
    TLConstructor  constructor = 1;
    bool game = 3;
    InputPeer peer = 4;
    int32 msg_id = 5;
    bytes data = 6;
    InputCheckPasswordSRP password = 7;
}

message TL_messages_setBotCallbackAnswer {
    TLConstructor  constructor = 1;
    bool alert = 3;
    int64 query_id = 4;
    google.protobuf.StringValue message = 5;
    google.protobuf.StringValue url = 6;
    int32 cache_time = 7;
}

message TL_messages_getPeerDialogs {
    TLConstructor  constructor = 1;
    repeated InputDialogPeer peers = 3;
}

message TL_messages_saveDraft {
    TLConstructor  constructor = 1;
    bool no_webpage = 3;
    bool invert_media = 4;
    InputReplyTo reply_to = 5;
    InputPeer peer = 6;
    string message = 7;
    repeated MessageEntity entities = 8;
    InputMedia media = 9;
    google.protobuf.Int64Value effect = 10;
    google.protobuf.Int32Value reply_to_msg_id = 11;
    google.protobuf.Int32Value top_msg_id = 12;
}

message TL_messages_getAllDrafts {
    TLConstructor  constructor = 1;
}

message TL_messages_getFeaturedStickers {
    TLConstructor  constructor = 1;
    int64 hash = 3;
}

message TL_messages_readFeaturedStickers {
    TLConstructor  constructor = 1;
    repeated int64 id = 3;
}

message TL_messages_getRecentStickers {
    TLConstructor  constructor = 1;
    bool attached = 3;
    int64 hash = 4;
}

message TL_messages_saveRecentSticker {
    TLConstructor  constructor = 1;
    bool attached = 3;
    InputDocument id = 4;
    Bool unsave = 5;
}

message TL_messages_clearRecentStickers {
    TLConstructor  constructor = 1;
    bool attached = 3;
}

message TL_messages_getArchivedStickers {
    TLConstructor  constructor = 1;
    bool masks = 3;
    bool emojis = 4;
    int64 offset_id = 5;
    int32 limit = 6;
}

message TL_messages_getMaskStickers {
    TLConstructor  constructor = 1;
    int64 hash = 3;
}

message TL_messages_getAttachedStickers {
    TLConstructor  constructor = 1;
    InputStickeredMedia media = 3;
}

message TL_messages_setGameScore {
    TLConstructor  constructor = 1;
    bool edit_message = 3;
    bool force = 4;
    InputPeer peer = 5;
    int32 id = 6;
    InputUser user_id = 7;
    int32 score = 8;
}

message TL_messages_setInlineGameScore {
    TLConstructor  constructor = 1;
    bool edit_message = 3;
    bool force = 4;
    InputBotInlineMessageID id = 5;
    InputUser user_id = 6;
    int32 score = 7;
}

message TL_messages_getGameHighScores {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 id = 4;
    InputUser user_id = 5;
}

message TL_messages_getInlineGameHighScores {
    TLConstructor  constructor = 1;
    InputBotInlineMessageID id = 3;
    InputUser user_id = 4;
}

message TL_messages_getCommonChats {
    TLConstructor  constructor = 1;
    InputUser user_id = 3;
    int64 max_id = 4;
    int32 limit = 5;
}

message TL_messages_getWebPage8D9692A3 {
    TLConstructor  constructor = 1;
    string url = 3;
    int32 hash = 4;
}

message TL_messages_toggleDialogPin {
    TLConstructor  constructor = 1;
    bool pinned = 3;
    InputDialogPeer peer = 4;
}

message TL_messages_reorderPinnedDialogs {
    TLConstructor  constructor = 1;
    bool force = 3;
    int32 folder_id = 4;
    repeated InputDialogPeer order = 5;
}

message TL_messages_getPinnedDialogs {
    TLConstructor  constructor = 1;
    int32 folder_id = 3;
}

message TL_messages_setBotShippingResults {
    TLConstructor  constructor = 1;
    int64 query_id = 3;
    google.protobuf.StringValue error = 4;
    repeated ShippingOption shipping_options = 5;
}

message TL_messages_setBotPrecheckoutResults {
    TLConstructor  constructor = 1;
    bool success = 3;
    int64 query_id = 4;
    google.protobuf.StringValue error = 5;
}

message TL_messages_uploadMedia {
    TLConstructor  constructor = 1;
    google.protobuf.StringValue business_connection_id = 3;
    InputPeer peer = 4;
    InputMedia media = 5;
}

message TL_messages_sendScreenshotNotification {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    InputReplyTo reply_to = 4;
    int64 random_id = 5;
    int32 reply_to_msg_id = 6;
}

message TL_messages_getFavedStickers {
    TLConstructor  constructor = 1;
    int64 hash = 3;
}

message TL_messages_faveSticker {
    TLConstructor  constructor = 1;
    InputDocument id = 3;
    Bool unfave = 4;
}

message TL_messages_getUnreadMentions {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    google.protobuf.Int32Value top_msg_id = 4;
    int32 offset_id = 5;
    int32 add_offset = 6;
    int32 limit = 7;
    int32 max_id = 8;
    int32 min_id = 9;
}

message TL_messages_readMentions {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    google.protobuf.Int32Value top_msg_id = 4;
}

message TL_messages_getRecentLocations {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 limit = 4;
    int64 hash = 5;
}

message TL_messages_sendMultiMedia {
    TLConstructor  constructor = 1;
    bool silent = 3;
    bool background = 4;
    bool clear_draft = 5;
    bool noforwards = 6;
    bool update_stickersets_order = 7;
    bool invert_media = 8;
    bool allow_paid_floodskip = 9;
    InputPeer peer = 10;
    InputReplyTo reply_to = 11;
    repeated InputSingleMedia multi_media = 12;
    google.protobuf.Int32Value schedule_date = 13;
    InputPeer send_as = 14;
    InputQuickReplyShortcut quick_reply_shortcut = 15;
    google.protobuf.Int64Value effect = 16;
    google.protobuf.Int64Value allow_paid_stars = 17;
    google.protobuf.Int32Value reply_to_msg_id = 18;
    google.protobuf.Int32Value top_msg_id = 19;
}

message TL_messages_uploadEncryptedFile {
    TLConstructor  constructor = 1;
    InputEncryptedChat peer = 3;
    InputEncryptedFile file = 4;
}

message TL_messages_searchStickerSets {
    TLConstructor  constructor = 1;
    bool exclude_featured = 3;
    string q = 4;
    int64 hash = 5;
}

message TL_messages_getSplitRanges {
    TLConstructor  constructor = 1;
}

message TL_messages_markDialogUnread {
    TLConstructor  constructor = 1;
    bool unread = 3;
    InputDialogPeer peer = 4;
}

message TL_messages_getDialogUnreadMarks {
    TLConstructor  constructor = 1;
}

message TL_messages_clearAllDrafts {
    TLConstructor  constructor = 1;
}

message TL_messages_updatePinnedMessage {
    TLConstructor  constructor = 1;
    bool silent = 3;
    bool unpin = 4;
    bool pm_oneside = 5;
    InputPeer peer = 6;
    int32 id = 7;
}

message TL_messages_sendVote {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 msg_id = 4;
    repeated bytes options = 5;
}

message TL_messages_getPollResults {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 msg_id = 4;
}

message TL_messages_getOnlines {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
}

message TL_messages_editChatAbout {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    string about = 4;
}

message TL_messages_editChatDefaultBannedRights {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    ChatBannedRights banned_rights = 4;
}

message TL_messages_getEmojiKeywords {
    TLConstructor  constructor = 1;
    string lang_code = 3;
}

message TL_messages_getEmojiKeywordsDifference {
    TLConstructor  constructor = 1;
    string lang_code = 3;
    int32 from_version = 4;
}

message TL_messages_getEmojiKeywordsLanguages {
    TLConstructor  constructor = 1;
    repeated string lang_codes = 3;
}

message TL_messages_getEmojiURL {
    TLConstructor  constructor = 1;
    string lang_code = 3;
}

message TL_messages_getSearchCounters {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    InputPeer saved_peer_id = 4;
    google.protobuf.Int32Value top_msg_id = 5;
    repeated MessagesFilter filters = 6;
}

message TL_messages_requestUrlAuth {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    google.protobuf.Int32Value msg_id = 4;
    google.protobuf.Int32Value button_id = 5;
    google.protobuf.StringValue url = 6;
}

message TL_messages_acceptUrlAuth {
    TLConstructor  constructor = 1;
    bool write_allowed = 3;
    InputPeer peer = 4;
    google.protobuf.Int32Value msg_id = 5;
    google.protobuf.Int32Value button_id = 6;
    google.protobuf.StringValue url = 7;
}

message TL_messages_hidePeerSettingsBar {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
}

message TL_messages_getScheduledHistory {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int64 hash = 4;
}

message TL_messages_getScheduledMessages {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    repeated int32 id = 4;
}

message TL_messages_sendScheduledMessages {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    repeated int32 id = 4;
}

message TL_messages_deleteScheduledMessages {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    repeated int32 id = 4;
}

message TL_messages_getPollVotes {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 id = 4;
    bytes option = 5;
    google.protobuf.StringValue offset = 6;
    int32 limit = 7;
}

message TL_messages_toggleStickerSets {
    TLConstructor  constructor = 1;
    bool uninstall = 3;
    bool archive = 4;
    bool unarchive = 5;
    repeated InputStickerSet stickersets = 6;
}

message TL_messages_getDialogFiltersEFD48C89 {
    TLConstructor  constructor = 1;
}

message TL_messages_getSuggestedDialogFilters {
    TLConstructor  constructor = 1;
}

message TL_messages_updateDialogFilter {
    TLConstructor  constructor = 1;
    int32 id = 3;
    DialogFilter filter = 4;
}

message TL_messages_updateDialogFiltersOrder {
    TLConstructor  constructor = 1;
    repeated int32 order = 3;
}

message TL_messages_getOldFeaturedStickers {
    TLConstructor  constructor = 1;
    int32 offset = 3;
    int32 limit = 4;
    int64 hash = 5;
}

message TL_messages_getReplies {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 msg_id = 4;
    int32 offset_id = 5;
    int32 offset_date = 6;
    int32 add_offset = 7;
    int32 limit = 8;
    int32 max_id = 9;
    int32 min_id = 10;
    int64 hash = 11;
}

message TL_messages_getDiscussionMessage {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 msg_id = 4;
}

message TL_messages_readDiscussion {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 msg_id = 4;
    int32 read_max_id = 5;
}

message TL_messages_unpinAllMessages {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    google.protobuf.Int32Value top_msg_id = 4;
}

message TL_messages_deleteChat {
    TLConstructor  constructor = 1;
    int64 chat_id = 3;
}

message TL_messages_deletePhoneCallHistory {
    TLConstructor  constructor = 1;
    bool revoke = 3;
}

message TL_messages_checkHistoryImport {
    TLConstructor  constructor = 1;
    string import_head = 3;
}

message TL_messages_initHistoryImport {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    InputFile file = 4;
    int32 media_count = 5;
}

message TL_messages_uploadImportedMedia {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int64 import_id = 4;
    string file_name = 5;
    InputMedia media = 6;
}

message TL_messages_startHistoryImport {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int64 import_id = 4;
}

message TL_messages_getExportedChatInvites {
    TLConstructor  constructor = 1;
    bool revoked = 3;
    InputPeer peer = 4;
    InputUser admin_id = 5;
    google.protobuf.Int32Value offset_date = 6;
    google.protobuf.StringValue offset_link = 7;
    int32 limit = 8;
}

message TL_messages_getExportedChatInvite {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    string link = 4;
}

message TL_messages_editExportedChatInvite {
    TLConstructor  constructor = 1;
    bool revoked = 3;
    InputPeer peer = 4;
    string link = 5;
    google.protobuf.Int32Value expire_date = 6;
    google.protobuf.Int32Value usage_limit = 7;
    Bool request_needed = 8;
    google.protobuf.StringValue title = 9;
}

message TL_messages_deleteRevokedExportedChatInvites {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    InputUser admin_id = 4;
}

message TL_messages_deleteExportedChatInvite {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    string link = 4;
}

message TL_messages_getAdminsWithInvites {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
}

message TL_messages_getChatInviteImporters {
    TLConstructor  constructor = 1;
    bool requested = 3;
    bool subscription_expired = 4;
    InputPeer peer = 5;
    google.protobuf.StringValue link = 6;
    google.protobuf.StringValue q = 7;
    int32 offset_date = 8;
    InputUser offset_user = 9;
    int32 limit = 10;
}

message TL_messages_setHistoryTTL {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 period = 4;
}

message TL_messages_checkHistoryImportPeer {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
}

message TL_messages_setChatTheme {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    string emoticon = 4;
}

message TL_messages_getMessageReadParticipants31C1C44F {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 msg_id = 4;
}

message TL_messages_getSearchResultsCalendar {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    InputPeer saved_peer_id = 4;
    MessagesFilter filter = 5;
    int32 offset_id = 6;
    int32 offset_date = 7;
}

message TL_messages_getSearchResultsPositions {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    InputPeer saved_peer_id = 4;
    MessagesFilter filter = 5;
    int32 offset_id = 6;
    int32 limit = 7;
}

message TL_messages_hideChatJoinRequest {
    TLConstructor  constructor = 1;
    bool approved = 3;
    InputPeer peer = 4;
    InputUser user_id = 5;
}

message TL_messages_hideAllChatJoinRequests {
    TLConstructor  constructor = 1;
    bool approved = 3;
    InputPeer peer = 4;
    google.protobuf.StringValue link = 5;
}

message TL_messages_toggleNoForwards {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    Bool enabled = 4;
}

message TL_messages_saveDefaultSendAs {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    InputPeer send_as = 4;
}

message TL_messages_sendReaction {
    TLConstructor  constructor = 1;
    bool big = 3;
    bool add_to_recent = 4;
    InputPeer peer = 5;
    int32 msg_id = 6;
    repeated Reaction reaction_FLAGVECTORREACTION = 7;
    google.protobuf.StringValue reaction_FLAGSTRING = 8;
}

message TL_messages_getMessagesReactions {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    repeated int32 id = 4;
}

message TL_messages_getMessageReactionsList {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 id = 4;
    Reaction reaction_FLAGREACTION = 5;
    google.protobuf.StringValue offset = 6;
    int32 limit = 7;
    google.protobuf.StringValue reaction_FLAGSTRING = 8;
}

message TL_messages_setChatAvailableReactions {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    ChatReactions available_reactions_CHATREACTIONS = 4;
    google.protobuf.Int32Value reactions_limit = 5;
    Bool paid_enabled = 6;
    repeated string available_reactions_VECTORSTRING = 7;
}

message TL_messages_getAvailableReactions {
    TLConstructor  constructor = 1;
    int32 hash = 3;
}

message TL_messages_setDefaultReaction {
    TLConstructor  constructor = 1;
    Reaction reaction_REACTION = 3;
    string reaction_STRING = 4;
}

message TL_messages_translateText {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    repeated int32 id = 4;
    repeated TextWithEntities text_FLAGVECTORTEXTWITHENTITIES = 5;
    string to_lang = 6;
    google.protobuf.Int32Value msg_id = 7;
    google.protobuf.StringValue text_FLAGSTRING = 8;
    google.protobuf.StringValue from_lang = 9;
}

message TL_messages_getUnreadReactions {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    google.protobuf.Int32Value top_msg_id = 4;
    int32 offset_id = 5;
    int32 add_offset = 6;
    int32 limit = 7;
    int32 max_id = 8;
    int32 min_id = 9;
}

message TL_messages_readReactions {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    google.protobuf.Int32Value top_msg_id = 4;
}

message TL_messages_searchSentMedia {
    TLConstructor  constructor = 1;
    string q = 3;
    MessagesFilter filter = 4;
    int32 limit = 5;
}

message TL_messages_getAttachMenuBots {
    TLConstructor  constructor = 1;
    int64 hash = 3;
}

message TL_messages_getAttachMenuBot {
    TLConstructor  constructor = 1;
    InputUser bot = 3;
}

message TL_messages_toggleBotInAttachMenu {
    TLConstructor  constructor = 1;
    bool write_allowed = 3;
    InputUser bot = 4;
    Bool enabled = 5;
}

message TL_messages_requestWebView {
    TLConstructor  constructor = 1;
    bool from_bot_menu = 3;
    bool silent = 4;
    bool compact = 5;
    bool fullscreen = 6;
    InputPeer peer = 7;
    InputUser bot = 8;
    google.protobuf.StringValue url = 9;
    google.protobuf.StringValue start_param = 10;
    DataJSON theme_params = 11;
    string platform = 12;
    InputReplyTo reply_to = 13;
    InputPeer send_as = 14;
    google.protobuf.Int32Value reply_to_msg_id = 15;
    google.protobuf.Int32Value top_msg_id = 16;
}

message TL_messages_prolongWebView {
    TLConstructor  constructor = 1;
    bool silent = 3;
    InputPeer peer = 4;
    InputUser bot = 5;
    int64 query_id = 6;
    InputReplyTo reply_to = 7;
    InputPeer send_as = 8;
    google.protobuf.Int32Value reply_to_msg_id = 9;
    google.protobuf.Int32Value top_msg_id = 10;
}

message TL_messages_requestSimpleWebView413A3E73 {
    TLConstructor  constructor = 1;
    bool from_switch_webview = 3;
    bool from_side_menu = 4;
    bool compact = 5;
    bool fullscreen = 6;
    InputUser bot = 7;
    google.protobuf.StringValue url = 8;
    google.protobuf.StringValue start_param = 9;
    DataJSON theme_params = 10;
    string platform = 11;
}

message TL_messages_sendWebViewResultMessage {
    TLConstructor  constructor = 1;
    string bot_query_id = 3;
    InputBotInlineResult result = 4;
}

message TL_messages_sendWebViewData {
    TLConstructor  constructor = 1;
    InputUser bot = 3;
    int64 random_id = 4;
    string button_text = 5;
    string data = 6;
}

message TL_messages_transcribeAudio {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 msg_id = 4;
}

message TL_messages_rateTranscribedAudio {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 msg_id = 4;
    int64 transcription_id = 5;
    Bool good = 6;
}

message TL_messages_getCustomEmojiDocuments {
    TLConstructor  constructor = 1;
    repeated int64 document_id = 3;
}

message TL_messages_getEmojiStickers {
    TLConstructor  constructor = 1;
    int64 hash = 3;
}

message TL_messages_getFeaturedEmojiStickers {
    TLConstructor  constructor = 1;
    int64 hash = 3;
}

message TL_messages_reportReaction {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 id = 4;
    InputPeer reaction_peer = 5;
}

message TL_messages_getTopReactions {
    TLConstructor  constructor = 1;
    int32 limit = 3;
    int64 hash = 4;
}

message TL_messages_getRecentReactions {
    TLConstructor  constructor = 1;
    int32 limit = 3;
    int64 hash = 4;
}

message TL_messages_clearRecentReactions {
    TLConstructor  constructor = 1;
}

message TL_messages_getExtendedMedia {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    repeated int32 id = 4;
}

message TL_messages_setDefaultHistoryTTL {
    TLConstructor  constructor = 1;
    int32 period = 3;
}

message TL_messages_getDefaultHistoryTTL {
    TLConstructor  constructor = 1;
}

message TL_messages_sendBotRequestedPeer {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 msg_id = 4;
    int32 button_id = 5;
    repeated InputPeer requested_peers = 6;
    InputPeer requested_peer = 7;
}

message TL_messages_getEmojiGroups {
    TLConstructor  constructor = 1;
    int32 hash = 3;
}

message TL_messages_getEmojiStatusGroups {
    TLConstructor  constructor = 1;
    int32 hash = 3;
}

message TL_messages_getEmojiProfilePhotoGroups {
    TLConstructor  constructor = 1;
    int32 hash = 3;
}

message TL_messages_searchCustomEmoji {
    TLConstructor  constructor = 1;
    string emoticon = 3;
    int64 hash = 4;
}

message TL_messages_togglePeerTranslations {
    TLConstructor  constructor = 1;
    bool disabled = 3;
    InputPeer peer = 4;
}

message TL_messages_getBotApp {
    TLConstructor  constructor = 1;
    InputBotApp app = 3;
    int64 hash = 4;
}

message TL_messages_requestAppWebView53618BCE {
    TLConstructor  constructor = 1;
    bool write_allowed = 3;
    bool compact = 4;
    bool fullscreen = 5;
    InputPeer peer = 6;
    InputBotApp app = 7;
    google.protobuf.StringValue start_param = 8;
    DataJSON theme_params = 9;
    string platform = 10;
}

message TL_messages_setChatWallPaper {
    TLConstructor  constructor = 1;
    bool for_both = 3;
    bool revert = 4;
    InputPeer peer = 5;
    InputWallPaper wallpaper = 6;
    WallPaperSettings settings = 7;
    google.protobuf.Int32Value id = 8;
}

message TL_messages_searchEmojiStickerSets {
    TLConstructor  constructor = 1;
    bool exclude_featured = 3;
    string q = 4;
    int64 hash = 5;
}

message TL_messages_getSavedDialogs {
    TLConstructor  constructor = 1;
    bool exclude_pinned = 3;
    int32 offset_date = 4;
    int32 offset_id = 5;
    InputPeer offset_peer = 6;
    int32 limit = 7;
    int64 hash = 8;
}

message TL_messages_getSavedHistory {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 offset_id = 4;
    int32 offset_date = 5;
    int32 add_offset = 6;
    int32 limit = 7;
    int32 max_id = 8;
    int32 min_id = 9;
    int64 hash = 10;
}

message TL_messages_deleteSavedHistory {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 max_id = 4;
    google.protobuf.Int32Value min_date = 5;
    google.protobuf.Int32Value max_date = 6;
}

message TL_messages_getPinnedSavedDialogs {
    TLConstructor  constructor = 1;
}

message TL_messages_toggleSavedDialogPin {
    TLConstructor  constructor = 1;
    bool pinned = 3;
    InputDialogPeer peer = 4;
}

message TL_messages_reorderPinnedSavedDialogs {
    TLConstructor  constructor = 1;
    bool force = 3;
    repeated InputDialogPeer order = 4;
}

message TL_messages_getSavedReactionTags {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int64 hash = 4;
}

message TL_messages_updateSavedReactionTag {
    TLConstructor  constructor = 1;
    Reaction reaction = 3;
    google.protobuf.StringValue title = 4;
}

message TL_messages_getDefaultTagReactions {
    TLConstructor  constructor = 1;
    int64 hash = 3;
}

message TL_messages_getOutboxReadDate {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 msg_id = 4;
}

message TL_messages_getQuickReplies {
    TLConstructor  constructor = 1;
    int64 hash = 3;
}

message TL_messages_reorderQuickReplies {
    TLConstructor  constructor = 1;
    repeated int32 order = 3;
}

message TL_messages_checkQuickReplyShortcut {
    TLConstructor  constructor = 1;
    string shortcut = 3;
}

message TL_messages_editQuickReplyShortcut {
    TLConstructor  constructor = 1;
    int32 shortcut_id = 3;
    string shortcut = 4;
}

message TL_messages_deleteQuickReplyShortcut {
    TLConstructor  constructor = 1;
    int32 shortcut_id = 3;
}

message TL_messages_getQuickReplyMessages {
    TLConstructor  constructor = 1;
    int32 shortcut_id = 3;
    repeated int32 id = 4;
    int64 hash = 5;
}

message TL_messages_sendQuickReplyMessages {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 shortcut_id = 4;
    repeated int32 id = 5;
    repeated int64 random_id = 6;
}

message TL_messages_deleteQuickReplyMessages {
    TLConstructor  constructor = 1;
    int32 shortcut_id = 3;
    repeated int32 id = 4;
}

message TL_messages_toggleDialogFilterTags {
    TLConstructor  constructor = 1;
    Bool enabled = 3;
}

message TL_messages_getMyStickers {
    TLConstructor  constructor = 1;
    int64 offset_id = 3;
    int32 limit = 4;
}

message TL_messages_getEmojiStickerGroups {
    TLConstructor  constructor = 1;
    int32 hash = 3;
}

message TL_messages_getAvailableEffects {
    TLConstructor  constructor = 1;
    int32 hash = 3;
}

message TL_messages_editFactCheck {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 msg_id = 4;
    TextWithEntities text = 5;
}

message TL_messages_deleteFactCheck {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 msg_id = 4;
}

message TL_messages_getFactCheck {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    repeated int32 msg_id = 4;
}

message TL_messages_requestMainWebView {
    TLConstructor  constructor = 1;
    bool compact = 3;
    bool fullscreen = 4;
    InputPeer peer = 5;
    InputUser bot = 6;
    google.protobuf.StringValue start_param = 7;
    DataJSON theme_params = 8;
    string platform = 9;
}

message TL_messages_sendPaidReaction {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 msg_id = 4;
    int32 count = 5;
    int64 random_id = 6;
    PaidReactionPrivacy private_FLAGPAIDREACTIONPRIVACY = 7;
    Bool private_FLAGBOOL = 8;
    bool private_FLAGBOOLEAN = 9;
}

message TL_messages_togglePaidReactionPrivacy {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 msg_id = 4;
    PaidReactionPrivacy private_PAIDREACTIONPRIVACY = 5;
    Bool private_BOOL = 6;
}

message TL_messages_getPaidReactionPrivacy {
    TLConstructor  constructor = 1;
}

message TL_messages_viewSponsoredMessage {
    TLConstructor  constructor = 1;
    bytes random_id = 3;
    InputPeer peer = 4;
}

message TL_messages_clickSponsoredMessage {
    TLConstructor  constructor = 1;
    bool media = 3;
    bool fullscreen = 4;
    bytes random_id = 5;
    InputPeer peer = 6;
}

message TL_messages_reportSponsoredMessage {
    TLConstructor  constructor = 1;
    bytes random_id = 3;
    bytes option = 4;
    InputPeer peer = 5;
}

message TL_messages_getSponsoredMessages {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
}

message TL_messages_savePreparedInlineMessage {
    TLConstructor  constructor = 1;
    InputBotInlineResult result = 3;
    InputUser user_id = 4;
    repeated InlineQueryPeerType peer_types = 5;
}

message TL_messages_getPreparedInlineMessage {
    TLConstructor  constructor = 1;
    InputUser bot = 3;
    string id = 4;
}

message TL_messages_searchStickers {
    TLConstructor  constructor = 1;
    bool emojis = 3;
    string q = 4;
    string emoticon = 5;
    repeated string lang_code = 6;
    int32 offset = 7;
    int32 limit = 8;
    int64 hash = 9;
}

message TL_messages_reportMessagesDelivery {
    TLConstructor  constructor = 1;
    bool push = 3;
    InputPeer peer = 4;
    repeated int32 id = 5;
}

message TL_updates_getState {
    TLConstructor  constructor = 1;
}

message TL_updates_getDifference {
    TLConstructor  constructor = 1;
    int32 pts = 3;
    google.protobuf.Int32Value pts_limit = 4;
    google.protobuf.Int32Value pts_total_limit = 5;
    int32 date = 6;
    int32 qts = 7;
    google.protobuf.Int32Value qts_limit = 8;
}

message TL_updates_getChannelDifference {
    TLConstructor  constructor = 1;
    bool force = 3;
    InputChannel channel = 4;
    ChannelMessagesFilter filter = 5;
    int32 pts = 6;
    int32 limit = 7;
}

message TL_photos_updateProfilePhoto {
    TLConstructor  constructor = 1;
    bool fallback = 3;
    InputUser bot = 4;
    InputPhoto id = 5;
}

message TL_photos_uploadProfilePhoto {
    TLConstructor  constructor = 1;
    bool fallback = 3;
    InputUser bot = 4;
    InputFile file = 5;
    InputFile video = 6;
    google.protobuf.DoubleValue video_start_ts = 7;
    VideoSize video_emoji_markup = 8;
}

message TL_photos_deletePhotos {
    TLConstructor  constructor = 1;
    repeated InputPhoto id = 3;
}

message TL_photos_getUserPhotos {
    TLConstructor  constructor = 1;
    InputUser user_id = 3;
    int32 offset = 4;
    int64 max_id = 5;
    int32 limit = 6;
}

message TL_photos_uploadContactProfilePhoto {
    TLConstructor  constructor = 1;
    bool suggest = 3;
    bool save = 4;
    InputUser user_id = 5;
    InputFile file = 6;
    InputFile video = 7;
    google.protobuf.DoubleValue video_start_ts = 8;
    VideoSize video_emoji_markup = 9;
}

message TL_upload_saveFilePart {
    TLConstructor  constructor = 1;
    int64 file_id = 3;
    int32 file_part = 4;
    bytes bytes = 5;
}

message TL_upload_getFile {
    TLConstructor  constructor = 1;
    bool precise = 3;
    bool cdn_supported = 4;
    InputFileLocation location = 5;
    int64 offset_INT64 = 6;
    int32 limit = 7;
    int32 offset_INT32 = 8;
}

message TL_upload_saveBigFilePart {
    TLConstructor  constructor = 1;
    int64 file_id = 3;
    int32 file_part = 4;
    int32 file_total_parts = 5;
    bytes bytes = 6;
}

message TL_upload_getWebFile {
    TLConstructor  constructor = 1;
    InputWebFileLocation location = 3;
    int32 offset = 4;
    int32 limit = 5;
}

message TL_upload_getCdnFile {
    TLConstructor  constructor = 1;
    bytes file_token = 3;
    int64 offset_INT64 = 4;
    int32 limit = 5;
    int32 offset_INT32 = 6;
}

message TL_upload_reuploadCdnFile {
    TLConstructor  constructor = 1;
    bytes file_token = 3;
    bytes request_token = 4;
}

message TL_upload_getCdnFileHashes {
    TLConstructor  constructor = 1;
    bytes file_token = 3;
    int64 offset_INT64 = 4;
    int32 offset_INT32 = 5;
}

message TL_upload_getFileHashes {
    TLConstructor  constructor = 1;
    InputFileLocation location = 3;
    int64 offset_INT64 = 4;
    int32 offset_INT32 = 5;
}

message TL_help_getConfig {
    TLConstructor  constructor = 1;
}

message TL_help_getNearestDc {
    TLConstructor  constructor = 1;
}

message TL_help_getAppUpdate {
    TLConstructor  constructor = 1;
    string source = 3;
}

message TL_help_getInviteText {
    TLConstructor  constructor = 1;
}

message TL_help_getSupport {
    TLConstructor  constructor = 1;
}

message TL_help_setBotUpdatesStatus {
    TLConstructor  constructor = 1;
    int32 pending_updates_count = 3;
    string message = 4;
}

message TL_help_getCdnConfig {
    TLConstructor  constructor = 1;
}

message TL_help_getRecentMeUrls {
    TLConstructor  constructor = 1;
    string referer = 3;
}

message TL_help_getTermsOfServiceUpdate {
    TLConstructor  constructor = 1;
}

message TL_help_acceptTermsOfService {
    TLConstructor  constructor = 1;
    DataJSON id = 3;
}

message TL_help_getDeepLinkInfo {
    TLConstructor  constructor = 1;
    string path = 3;
}

message TL_help_getAppConfig61E3F854 {
    TLConstructor  constructor = 1;
    int32 hash = 3;
}

message TL_help_saveAppLog {
    TLConstructor  constructor = 1;
    repeated InputAppEvent events = 3;
}

message TL_help_getPassportConfig {
    TLConstructor  constructor = 1;
    int32 hash = 3;
}

message TL_help_getSupportName {
    TLConstructor  constructor = 1;
}

message TL_help_getUserInfo {
    TLConstructor  constructor = 1;
    InputUser user_id = 3;
}

message TL_help_editUserInfo {
    TLConstructor  constructor = 1;
    InputUser user_id = 3;
    string message = 4;
    repeated MessageEntity entities = 5;
}

message TL_help_getPromoData {
    TLConstructor  constructor = 1;
}

message TL_help_hidePromoData {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
}

message TL_help_dismissSuggestion {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    string suggestion = 4;
}

message TL_help_getCountriesList {
    TLConstructor  constructor = 1;
    string lang_code = 3;
    int32 hash = 4;
}

message TL_help_getPremiumPromo {
    TLConstructor  constructor = 1;
}

message TL_help_getPeerColors {
    TLConstructor  constructor = 1;
    int32 hash = 3;
}

message TL_help_getPeerProfileColors {
    TLConstructor  constructor = 1;
    int32 hash = 3;
}

message TL_help_getTimezonesList {
    TLConstructor  constructor = 1;
    int32 hash = 3;
}

message TL_channels_readHistory {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    int32 max_id = 4;
}

message TL_channels_deleteMessages {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    repeated int32 id = 4;
}

message TL_channels_reportSpam {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    InputPeer participant = 4;
    repeated int32 id = 5;
}

message TL_channels_getMessages {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    repeated InputMessage id_VECTORINPUTMESSAGE = 4;
    repeated int32 id_VECTORINT32 = 5;
}

message TL_channels_getParticipants {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    ChannelParticipantsFilter filter = 4;
    int32 offset = 5;
    int32 limit = 6;
    int64 hash = 7;
}

message TL_channels_getParticipant {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    InputPeer participant = 4;
}

message TL_channels_getChannels {
    TLConstructor  constructor = 1;
    repeated InputChannel id = 3;
}

message TL_channels_getFullChannel {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
}

message TL_channels_createChannel {
    TLConstructor  constructor = 1;
    bool broadcast = 3;
    bool megagroup = 4;
    bool for_import = 5;
    bool forum = 6;
    string title = 7;
    string about = 8;
    InputGeoPoint geo_point = 9;
    google.protobuf.StringValue address = 10;
    google.protobuf.Int32Value ttl_period = 11;
}

message TL_channels_editAdmin {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    InputUser user_id = 4;
    ChatAdminRights admin_rights = 5;
    string rank = 6;
}

message TL_channels_editTitle {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    string title = 4;
}

message TL_channels_editPhoto {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    InputChatPhoto photo = 4;
}

message TL_channels_checkUsername {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    string username = 4;
}

message TL_channels_updateUsername {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    string username = 4;
}

message TL_channels_joinChannel {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
}

message TL_channels_leaveChannel {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
}

message TL_channels_inviteToChannelC9E33D54 {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    repeated InputUser users = 4;
}

message TL_channels_deleteChannel {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
}

message TL_channels_exportMessageLink {
    TLConstructor  constructor = 1;
    bool grouped = 3;
    bool thread = 4;
    InputChannel channel = 5;
    int32 id = 6;
}

message TL_channels_toggleSignatures {
    TLConstructor  constructor = 1;
    bool signatures_enabled = 3;
    bool profiles_enabled = 4;
    InputChannel channel = 5;
    Bool enabled = 6;
}

message TL_channels_getAdminedPublicChannels {
    TLConstructor  constructor = 1;
    bool by_location = 3;
    bool check_limit = 4;
    bool for_personal = 5;
}

message TL_channels_editBanned {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    InputPeer participant = 4;
    ChatBannedRights banned_rights = 5;
}

message TL_channels_getAdminLog {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    string q = 4;
    ChannelAdminLogEventsFilter events_filter = 5;
    repeated InputUser admins = 6;
    int64 max_id = 7;
    int64 min_id = 8;
    int32 limit = 9;
}

message TL_channels_setStickers {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    InputStickerSet stickerset = 4;
}

message TL_channels_readMessageContents {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    repeated int32 id = 4;
}

message TL_channels_deleteHistory9BAA9647 {
    TLConstructor  constructor = 1;
    bool for_everyone = 3;
    InputChannel channel = 4;
    int32 max_id = 5;
}

message TL_channels_togglePreHistoryHidden {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    Bool enabled = 4;
}

message TL_channels_getLeftChannels {
    TLConstructor  constructor = 1;
    int32 offset = 3;
}

message TL_channels_getGroupsForDiscussion {
    TLConstructor  constructor = 1;
}

message TL_channels_setDiscussionGroup {
    TLConstructor  constructor = 1;
    InputChannel broadcast = 3;
    InputChannel group = 4;
}

message TL_channels_editCreator {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    InputUser user_id = 4;
    InputCheckPasswordSRP password = 5;
}

message TL_channels_editLocation {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    InputGeoPoint geo_point = 4;
    string address = 5;
}

message TL_channels_toggleSlowMode {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    int32 seconds = 4;
}

message TL_channels_getInactiveChannels {
    TLConstructor  constructor = 1;
}

message TL_channels_convertToGigagroup {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
}

message TL_channels_getSendAs {
    TLConstructor  constructor = 1;
    bool for_paid_reactions = 3;
    InputPeer peer = 4;
}

message TL_channels_deleteParticipantHistory {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    InputPeer participant = 4;
}

message TL_channels_toggleJoinToSend {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    Bool enabled = 4;
}

message TL_channels_toggleJoinRequest {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    Bool enabled = 4;
}

message TL_channels_reorderUsernames {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    repeated string order = 4;
}

message TL_channels_toggleUsername {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    string username = 4;
    Bool active = 5;
}

message TL_channels_deactivateAllUsernames {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
}

message TL_channels_toggleForum {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    Bool enabled = 4;
}

message TL_channels_createForumTopic {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    string title = 4;
    google.protobuf.Int32Value icon_color = 5;
    google.protobuf.Int64Value icon_emoji_id = 6;
    int64 random_id = 7;
    InputPeer send_as = 8;
}

message TL_channels_getForumTopics {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    google.protobuf.StringValue q = 4;
    int32 offset_date = 5;
    int32 offset_id = 6;
    int32 offset_topic = 7;
    int32 limit = 8;
}

message TL_channels_getForumTopicsByID {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    repeated int32 topics = 4;
}

message TL_channels_editForumTopic {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    int32 topic_id = 4;
    google.protobuf.StringValue title = 5;
    google.protobuf.Int64Value icon_emoji_id = 6;
    Bool closed = 7;
    Bool hidden = 8;
}

message TL_channels_updatePinnedForumTopic {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    int32 topic_id = 4;
    Bool pinned = 5;
}

message TL_channels_deleteTopicHistory {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    int32 top_msg_id = 4;
}

message TL_channels_reorderPinnedForumTopics {
    TLConstructor  constructor = 1;
    bool force = 3;
    InputChannel channel = 4;
    repeated int32 order = 5;
}

message TL_channels_toggleAntiSpam {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    Bool enabled = 4;
}

message TL_channels_reportAntiSpamFalsePositive {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    int32 msg_id = 4;
}

message TL_channels_toggleParticipantsHidden {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    Bool enabled = 4;
}

message TL_channels_updateColor {
    TLConstructor  constructor = 1;
    bool for_profile = 3;
    InputChannel channel = 4;
    google.protobuf.Int32Value color_FLAGINT32 = 5;
    google.protobuf.Int64Value background_emoji_id = 6;
    int32 color_INT32 = 7;
}

message TL_channels_toggleViewForumAsMessages {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    Bool enabled = 4;
}

message TL_channels_getChannelRecommendations {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
}

message TL_channels_updateEmojiStatus {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    EmojiStatus emoji_status = 4;
}

message TL_channels_setBoostsToUnblockRestrictions {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    int32 boosts = 4;
}

message TL_channels_setEmojiStickers {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    InputStickerSet stickerset = 4;
}

message TL_channels_restrictSponsoredMessages {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    Bool restricted = 4;
}

message TL_channels_searchPosts {
    TLConstructor  constructor = 1;
    string hashtag = 3;
    int32 offset_rate = 4;
    InputPeer offset_peer = 5;
    int32 offset_id = 6;
    int32 limit = 7;
}

message TL_channels_updatePaidMessagesPrice {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    int64 send_paid_messages_stars = 4;
}

message TL_bots_sendCustomRequest {
    TLConstructor  constructor = 1;
    string custom_method = 3;
    DataJSON params = 4;
}

message TL_bots_answerWebhookJSONQuery {
    TLConstructor  constructor = 1;
    int64 query_id = 3;
    DataJSON data = 4;
}

message TL_bots_setBotCommands {
    TLConstructor  constructor = 1;
    BotCommandScope scope = 3;
    string lang_code = 4;
    repeated BotCommand commands = 5;
}

message TL_bots_resetBotCommands {
    TLConstructor  constructor = 1;
    BotCommandScope scope = 3;
    string lang_code = 4;
}

message TL_bots_getBotCommands {
    TLConstructor  constructor = 1;
    BotCommandScope scope = 3;
    string lang_code = 4;
}

message TL_bots_setBotMenuButton {
    TLConstructor  constructor = 1;
    InputUser user_id = 3;
    BotMenuButton button = 4;
}

message TL_bots_getBotMenuButton {
    TLConstructor  constructor = 1;
    InputUser user_id = 3;
}

message TL_bots_setBotBroadcastDefaultAdminRights {
    TLConstructor  constructor = 1;
    ChatAdminRights admin_rights = 3;
}

message TL_bots_setBotGroupDefaultAdminRights {
    TLConstructor  constructor = 1;
    ChatAdminRights admin_rights = 3;
}

message TL_bots_setBotInfo {
    TLConstructor  constructor = 1;
    InputUser bot = 3;
    string lang_code = 4;
    google.protobuf.StringValue name = 5;
    google.protobuf.StringValue about = 6;
    google.protobuf.StringValue description = 7;
}

message TL_bots_getBotInfoDCD914FD {
    TLConstructor  constructor = 1;
    InputUser bot = 3;
    string lang_code = 4;
}

message TL_bots_reorderUsernames {
    TLConstructor  constructor = 1;
    InputUser bot = 3;
    repeated string order = 4;
}

message TL_bots_toggleUsername {
    TLConstructor  constructor = 1;
    InputUser bot = 3;
    string username = 4;
    Bool active = 5;
}

message TL_bots_canSendMessage {
    TLConstructor  constructor = 1;
    InputUser bot = 3;
}

message TL_bots_allowSendMessage {
    TLConstructor  constructor = 1;
    InputUser bot = 3;
}

message TL_bots_invokeWebViewCustomMethod {
    TLConstructor  constructor = 1;
    InputUser bot = 3;
    string custom_method = 4;
    DataJSON params = 5;
}

message TL_bots_getPopularAppBots {
    TLConstructor  constructor = 1;
    string offset = 3;
    int32 limit = 4;
}

message TL_bots_addPreviewMedia {
    TLConstructor  constructor = 1;
    InputUser bot = 3;
    string lang_code = 4;
    InputMedia media = 5;
}

message TL_bots_editPreviewMedia {
    TLConstructor  constructor = 1;
    InputUser bot = 3;
    string lang_code = 4;
    InputMedia media = 5;
    InputMedia new_media = 6;
}

message TL_bots_deletePreviewMedia {
    TLConstructor  constructor = 1;
    InputUser bot = 3;
    string lang_code = 4;
    repeated InputMedia media = 5;
}

message TL_bots_reorderPreviewMedias {
    TLConstructor  constructor = 1;
    InputUser bot = 3;
    string lang_code = 4;
    repeated InputMedia order = 5;
}

message TL_bots_getPreviewInfo {
    TLConstructor  constructor = 1;
    InputUser bot = 3;
    string lang_code = 4;
}

message TL_bots_getPreviewMedias {
    TLConstructor  constructor = 1;
    InputUser bot = 3;
}

message TL_bots_updateUserEmojiStatus {
    TLConstructor  constructor = 1;
    InputUser user_id = 3;
    EmojiStatus emoji_status = 4;
}

message TL_bots_toggleUserEmojiStatusPermission {
    TLConstructor  constructor = 1;
    InputUser bot = 3;
    Bool enabled = 4;
}

message TL_bots_checkDownloadFileParams {
    TLConstructor  constructor = 1;
    InputUser bot = 3;
    string file_name = 4;
    string url = 5;
}

message TL_bots_getAdminedBots {
    TLConstructor  constructor = 1;
}

message TL_bots_updateStarRefProgram {
    TLConstructor  constructor = 1;
    InputUser bot = 3;
    int32 commission_permille = 4;
    google.protobuf.Int32Value duration_months = 5;
}

message TL_bots_setCustomVerification {
    TLConstructor  constructor = 1;
    bool enabled = 3;
    InputUser bot = 4;
    InputPeer peer = 5;
    google.protobuf.StringValue custom_description = 6;
}

message TL_bots_getBotRecommendations {
    TLConstructor  constructor = 1;
    InputUser bot = 3;
}

message TL_payments_getPaymentForm {
    TLConstructor  constructor = 1;
    InputInvoice invoice = 3;
    DataJSON theme_params = 4;
    InputPeer peer = 5;
    int32 msg_id = 6;
}

message TL_payments_getPaymentReceipt {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 msg_id = 4;
}

message TL_payments_validateRequestedInfo {
    TLConstructor  constructor = 1;
    bool save = 3;
    InputInvoice invoice = 4;
    PaymentRequestedInfo info = 5;
    InputPeer peer = 6;
    int32 msg_id = 7;
}

message TL_payments_sendPaymentForm {
    TLConstructor  constructor = 1;
    int64 form_id = 3;
    InputInvoice invoice = 4;
    google.protobuf.StringValue requested_info_id = 5;
    google.protobuf.StringValue shipping_option_id = 6;
    InputPaymentCredentials credentials = 7;
    google.protobuf.Int64Value tip_amount = 8;
    InputPeer peer = 9;
    int32 msg_id = 10;
}

message TL_payments_getSavedInfo {
    TLConstructor  constructor = 1;
}

message TL_payments_clearSavedInfo {
    TLConstructor  constructor = 1;
    bool credentials = 3;
    bool info = 4;
}

message TL_payments_getBankCardData {
    TLConstructor  constructor = 1;
    string number = 3;
}

message TL_payments_exportInvoice {
    TLConstructor  constructor = 1;
    InputMedia invoice_media = 3;
    InputUser user_id = 4;
}

message TL_payments_assignAppStoreTransaction {
    TLConstructor  constructor = 1;
    bytes receipt = 3;
    InputStorePaymentPurpose purpose = 4;
    bool restore = 5;
    string transaction_id = 6;
}

message TL_payments_assignPlayMarketTransaction {
    TLConstructor  constructor = 1;
    DataJSON receipt = 3;
    InputStorePaymentPurpose purpose = 4;
    string purchase_token = 5;
}

message TL_payments_getPremiumGiftCodeOptions {
    TLConstructor  constructor = 1;
    InputPeer boost_peer = 3;
}

message TL_payments_checkGiftCode {
    TLConstructor  constructor = 1;
    string slug = 3;
}

message TL_payments_applyGiftCode {
    TLConstructor  constructor = 1;
    string slug = 3;
}

message TL_payments_getGiveawayInfo {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 msg_id = 4;
}

message TL_payments_launchPrepaidGiveaway {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int64 giveaway_id = 4;
    InputStorePaymentPurpose purpose = 5;
}

message TL_payments_getStarsTopupOptions {
    TLConstructor  constructor = 1;
}

message TL_payments_getStarsStatus {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
}

message TL_payments_getStarsTransactions {
    TLConstructor  constructor = 1;
    bool inbound = 3;
    bool outbound = 4;
    bool ascending = 5;
    google.protobuf.StringValue subscription_id = 6;
    InputPeer peer = 7;
    string offset = 8;
    int32 limit = 9;
}

message TL_payments_sendStarsForm {
    TLConstructor  constructor = 1;
    int64 form_id = 3;
    InputInvoice invoice = 4;
}

message TL_payments_refundStarsCharge {
    TLConstructor  constructor = 1;
    InputUser user_id = 3;
    string charge_id = 4;
}

message TL_payments_getStarsRevenueStats {
    TLConstructor  constructor = 1;
    bool dark = 3;
    InputPeer peer = 4;
}

message TL_payments_getStarsRevenueWithdrawalUrl {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int64 stars = 4;
    InputCheckPasswordSRP password = 5;
}

message TL_payments_getStarsRevenueAdsAccountUrl {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
}

message TL_payments_getStarsTransactionsByID {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    repeated InputStarsTransaction id = 4;
}

message TL_payments_getStarsGiftOptions {
    TLConstructor  constructor = 1;
    InputUser user_id = 3;
}

message TL_payments_getStarsSubscriptions {
    TLConstructor  constructor = 1;
    bool missing_balance = 3;
    InputPeer peer = 4;
    string offset = 5;
}

message TL_payments_changeStarsSubscription {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    string subscription_id = 4;
    Bool canceled = 5;
}

message TL_payments_fulfillStarsSubscription {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    string subscription_id = 4;
}

message TL_payments_getStarsGiveawayOptions {
    TLConstructor  constructor = 1;
}

message TL_payments_getStarGifts {
    TLConstructor  constructor = 1;
    int32 hash = 3;
}

message TL_payments_saveStarGift {
    TLConstructor  constructor = 1;
    bool unsave = 3;
    InputSavedStarGift stargift = 4;
    int32 msg_id = 5;
    InputUser user_id = 6;
}

message TL_payments_convertStarGift {
    TLConstructor  constructor = 1;
    InputSavedStarGift stargift = 3;
    int32 msg_id = 4;
    InputUser user_id = 5;
}

message TL_payments_botCancelStarsSubscription {
    TLConstructor  constructor = 1;
    bool restore = 3;
    InputUser user_id = 4;
    string charge_id_STRING = 5;
    google.protobuf.StringValue invoice_slug = 6;
    google.protobuf.StringValue charge_id_FLAGSTRING = 7;
}

message TL_payments_getConnectedStarRefBots {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    google.protobuf.Int32Value offset_date = 4;
    google.protobuf.StringValue offset_link = 5;
    int32 limit = 6;
}

message TL_payments_getConnectedStarRefBot {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    InputUser bot = 4;
}

message TL_payments_getSuggestedStarRefBots {
    TLConstructor  constructor = 1;
    bool order_by_revenue = 3;
    bool order_by_date = 4;
    InputPeer peer = 5;
    string offset = 6;
    int32 limit = 7;
}

message TL_payments_connectStarRefBot {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    InputUser bot = 4;
}

message TL_payments_editConnectedStarRefBot {
    TLConstructor  constructor = 1;
    bool revoked = 3;
    InputPeer peer = 4;
    string link = 5;
}

message TL_payments_getStarGiftUpgradePreview {
    TLConstructor  constructor = 1;
    int64 gift_id = 3;
}

message TL_payments_upgradeStarGift {
    TLConstructor  constructor = 1;
    bool keep_original_details = 3;
    InputSavedStarGift stargift = 4;
    int32 msg_id = 5;
}

message TL_payments_transferStarGift {
    TLConstructor  constructor = 1;
    InputSavedStarGift stargift = 3;
    InputPeer to_id_INPUTPEER = 4;
    int32 msg_id = 5;
    InputUser to_id_INPUTUSER = 6;
}

message TL_payments_getUniqueStarGift {
    TLConstructor  constructor = 1;
    string slug = 3;
}

message TL_payments_getSavedStarGifts {
    TLConstructor  constructor = 1;
    bool exclude_unsaved = 3;
    bool exclude_saved = 4;
    bool exclude_unlimited = 5;
    bool exclude_limited = 6;
    bool exclude_unique = 7;
    bool sort_by_value = 8;
    InputPeer peer = 9;
    string offset = 10;
    int32 limit = 11;
}

message TL_payments_getSavedStarGift {
    TLConstructor  constructor = 1;
    repeated InputSavedStarGift stargift = 3;
}

message TL_payments_getStarGiftWithdrawalUrl {
    TLConstructor  constructor = 1;
    InputSavedStarGift stargift = 3;
    InputCheckPasswordSRP password = 4;
}

message TL_payments_toggleChatStarGiftNotifications {
    TLConstructor  constructor = 1;
    bool enabled = 3;
    InputPeer peer = 4;
}

message TL_payments_toggleStarGiftsPinnedToTop {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    repeated InputSavedStarGift stargift = 4;
}

message TL_payments_canPurchaseStore {
    TLConstructor  constructor = 1;
    InputStorePaymentPurpose purpose = 3;
}

message TL_stickers_createStickerSet {
    TLConstructor  constructor = 1;
    bool masks = 3;
    bool emojis = 4;
    bool text_color = 5;
    InputUser user_id = 6;
    string title = 7;
    string short_name = 8;
    InputDocument thumb = 9;
    repeated InputStickerSetItem stickers = 10;
    google.protobuf.StringValue software = 11;
    bool animated = 12;
    bool videos = 13;
}

message TL_stickers_removeStickerFromSet {
    TLConstructor  constructor = 1;
    InputDocument sticker = 3;
}

message TL_stickers_changeStickerPosition {
    TLConstructor  constructor = 1;
    InputDocument sticker = 3;
    int32 position = 4;
}

message TL_stickers_addStickerToSet {
    TLConstructor  constructor = 1;
    InputStickerSet stickerset = 3;
    InputStickerSetItem sticker = 4;
}

message TL_stickers_setStickerSetThumb {
    TLConstructor  constructor = 1;
    InputStickerSet stickerset = 3;
    InputDocument thumb = 4;
    google.protobuf.Int64Value thumb_document_id = 5;
}

message TL_stickers_checkShortName {
    TLConstructor  constructor = 1;
    string short_name = 3;
}

message TL_stickers_suggestShortName {
    TLConstructor  constructor = 1;
    string title = 3;
}

message TL_stickers_changeSticker {
    TLConstructor  constructor = 1;
    InputDocument sticker = 3;
    google.protobuf.StringValue emoji = 4;
    MaskCoords mask_coords = 5;
    google.protobuf.StringValue keywords = 6;
}

message TL_stickers_renameStickerSet {
    TLConstructor  constructor = 1;
    InputStickerSet stickerset = 3;
    string title = 4;
}

message TL_stickers_deleteStickerSet {
    TLConstructor  constructor = 1;
    InputStickerSet stickerset = 3;
}

message TL_stickers_replaceSticker {
    TLConstructor  constructor = 1;
    InputDocument sticker = 3;
    InputStickerSetItem new_sticker = 4;
}

message TL_phone_getCallConfig {
    TLConstructor  constructor = 1;
}

message TL_phone_requestCall {
    TLConstructor  constructor = 1;
    bool video = 3;
    InputUser user_id = 4;
    InputGroupCall conference_call = 5;
    int32 random_id = 6;
    bytes g_a_hash = 7;
    PhoneCallProtocol protocol = 8;
}

message TL_phone_acceptCall {
    TLConstructor  constructor = 1;
    InputPhoneCall peer = 3;
    bytes g_b = 4;
    PhoneCallProtocol protocol = 5;
}

message TL_phone_confirmCall {
    TLConstructor  constructor = 1;
    InputPhoneCall peer = 3;
    bytes g_a = 4;
    int64 key_fingerprint = 5;
    PhoneCallProtocol protocol = 6;
}

message TL_phone_receivedCall {
    TLConstructor  constructor = 1;
    InputPhoneCall peer = 3;
}

message TL_phone_discardCall {
    TLConstructor  constructor = 1;
    bool video = 3;
    InputPhoneCall peer = 4;
    int32 duration = 5;
    PhoneCallDiscardReason reason = 6;
    int64 connection_id = 7;
}

message TL_phone_setCallRating {
    TLConstructor  constructor = 1;
    bool user_initiative = 3;
    InputPhoneCall peer = 4;
    int32 rating = 5;
    string comment = 6;
}

message TL_phone_saveCallDebug {
    TLConstructor  constructor = 1;
    InputPhoneCall peer = 3;
    DataJSON debug = 4;
}

message TL_phone_sendSignalingData {
    TLConstructor  constructor = 1;
    InputPhoneCall peer = 3;
    bytes data = 4;
}

message TL_phone_createGroupCall {
    TLConstructor  constructor = 1;
    bool rtmp_stream = 3;
    InputPeer peer = 4;
    int32 random_id = 5;
    google.protobuf.StringValue title = 6;
    google.protobuf.Int32Value schedule_date = 7;
}

message TL_phone_joinGroupCall {
    TLConstructor  constructor = 1;
    bool muted = 3;
    bool video_stopped = 4;
    InputGroupCall call = 5;
    InputPeer join_as = 6;
    google.protobuf.StringValue invite_hash = 7;
    google.protobuf.Int64Value key_fingerprint = 8;
    DataJSON params = 9;
}

message TL_phone_leaveGroupCall {
    TLConstructor  constructor = 1;
    InputGroupCall call = 3;
    int32 source = 4;
}

message TL_phone_inviteToGroupCall {
    TLConstructor  constructor = 1;
    InputGroupCall call = 3;
    repeated InputUser users = 4;
}

message TL_phone_discardGroupCall {
    TLConstructor  constructor = 1;
    InputGroupCall call = 3;
}

message TL_phone_toggleGroupCallSettings {
    TLConstructor  constructor = 1;
    bool reset_invite_hash = 3;
    InputGroupCall call = 4;
    Bool join_muted = 5;
}

message TL_phone_getGroupCall {
    TLConstructor  constructor = 1;
    InputGroupCall call = 3;
    int32 limit = 4;
}

message TL_phone_getGroupParticipants {
    TLConstructor  constructor = 1;
    InputGroupCall call = 3;
    repeated InputPeer ids = 4;
    repeated int32 sources = 5;
    string offset = 6;
    int32 limit = 7;
}

message TL_phone_checkGroupCall {
    TLConstructor  constructor = 1;
    InputGroupCall call = 3;
    repeated int32 sources = 4;
}

message TL_phone_toggleGroupCallRecord {
    TLConstructor  constructor = 1;
    bool start = 3;
    bool video = 4;
    InputGroupCall call = 5;
    google.protobuf.StringValue title = 6;
    Bool video_portrait = 7;
}

message TL_phone_editGroupCallParticipant {
    TLConstructor  constructor = 1;
    InputGroupCall call = 3;
    InputPeer participant = 4;
    Bool muted = 5;
    google.protobuf.Int32Value volume = 6;
    Bool raise_hand = 7;
    Bool video_stopped = 8;
    Bool video_paused = 9;
    Bool presentation_paused = 10;
}

message TL_phone_editGroupCallTitle {
    TLConstructor  constructor = 1;
    InputGroupCall call = 3;
    string title = 4;
}

message TL_phone_getGroupCallJoinAs {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
}

message TL_phone_exportGroupCallInvite {
    TLConstructor  constructor = 1;
    bool can_self_unmute = 3;
    InputGroupCall call = 4;
}

message TL_phone_toggleGroupCallStartSubscription {
    TLConstructor  constructor = 1;
    InputGroupCall call = 3;
    Bool subscribed = 4;
}

message TL_phone_startScheduledGroupCall {
    TLConstructor  constructor = 1;
    InputGroupCall call = 3;
}

message TL_phone_saveDefaultGroupCallJoinAs {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    InputPeer join_as = 4;
}

message TL_phone_joinGroupCallPresentation {
    TLConstructor  constructor = 1;
    InputGroupCall call = 3;
    DataJSON params = 4;
}

message TL_phone_leaveGroupCallPresentation {
    TLConstructor  constructor = 1;
    InputGroupCall call = 3;
}

message TL_phone_getGroupCallStreamChannels {
    TLConstructor  constructor = 1;
    InputGroupCall call = 3;
}

message TL_phone_getGroupCallStreamRtmpUrl {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    Bool revoke = 4;
}

message TL_phone_saveCallLog {
    TLConstructor  constructor = 1;
    InputPhoneCall peer = 3;
    InputFile file = 4;
}

message TL_phone_createConferenceCall {
    TLConstructor  constructor = 1;
    InputPhoneCall peer = 3;
    int64 key_fingerprint = 4;
}

message TL_langpack_getLangPack {
    TLConstructor  constructor = 1;
    string lang_pack = 3;
    string lang_code = 4;
}

message TL_langpack_getStrings {
    TLConstructor  constructor = 1;
    string lang_pack = 3;
    string lang_code = 4;
    repeated string keys = 5;
}

message TL_langpack_getDifference {
    TLConstructor  constructor = 1;
    string lang_pack = 3;
    string lang_code = 4;
    int32 from_version = 5;
}

message TL_langpack_getLanguages {
    TLConstructor  constructor = 1;
    string lang_pack = 3;
}

message TL_langpack_getLanguage {
    TLConstructor  constructor = 1;
    string lang_pack = 3;
    string lang_code = 4;
}

message TL_folders_editPeerFolders {
    TLConstructor  constructor = 1;
    repeated InputFolderPeer folder_peers = 3;
}

message TL_stats_getBroadcastStats {
    TLConstructor  constructor = 1;
    bool dark = 3;
    InputChannel channel = 4;
}

message TL_stats_loadAsyncGraph {
    TLConstructor  constructor = 1;
    string token = 3;
    google.protobuf.Int64Value x = 4;
}

message TL_stats_getMegagroupStats {
    TLConstructor  constructor = 1;
    bool dark = 3;
    InputChannel channel = 4;
}

message TL_stats_getMessagePublicForwards5F150144 {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    int32 msg_id = 4;
    string offset = 5;
    int32 limit = 6;
}

message TL_stats_getMessageStats {
    TLConstructor  constructor = 1;
    bool dark = 3;
    InputChannel channel = 4;
    int32 msg_id = 5;
}

message TL_stats_getStoryStats {
    TLConstructor  constructor = 1;
    bool dark = 3;
    InputPeer peer = 4;
    int32 id = 5;
}

message TL_stats_getStoryPublicForwards {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 id = 4;
    string offset = 5;
    int32 limit = 6;
}

message TL_stats_getBroadcastRevenueStats {
    TLConstructor  constructor = 1;
    bool dark = 3;
    InputPeer peer = 4;
    InputChannel channel = 5;
}

message TL_stats_getBroadcastRevenueWithdrawalUrl {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    InputCheckPasswordSRP password = 4;
    InputChannel channel = 5;
}

message TL_stats_getBroadcastRevenueTransactions {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 offset = 4;
    int32 limit = 5;
    InputChannel channel = 6;
}

message TL_chatlists_exportChatlistInvite {
    TLConstructor  constructor = 1;
    InputChatlist chatlist = 3;
    string title = 4;
    repeated InputPeer peers = 5;
}

message TL_chatlists_deleteExportedInvite {
    TLConstructor  constructor = 1;
    InputChatlist chatlist = 3;
    string slug = 4;
}

message TL_chatlists_editExportedInvite {
    TLConstructor  constructor = 1;
    InputChatlist chatlist = 3;
    string slug = 4;
    google.protobuf.StringValue title = 5;
    repeated InputPeer peers = 6;
}

message TL_chatlists_getExportedInvites {
    TLConstructor  constructor = 1;
    InputChatlist chatlist = 3;
}

message TL_chatlists_checkChatlistInvite {
    TLConstructor  constructor = 1;
    string slug = 3;
}

message TL_chatlists_joinChatlistInvite {
    TLConstructor  constructor = 1;
    string slug = 3;
    repeated InputPeer peers = 4;
}

message TL_chatlists_getChatlistUpdates {
    TLConstructor  constructor = 1;
    InputChatlist chatlist = 3;
}

message TL_chatlists_joinChatlistUpdates {
    TLConstructor  constructor = 1;
    InputChatlist chatlist = 3;
    repeated InputPeer peers = 4;
}

message TL_chatlists_hideChatlistUpdates {
    TLConstructor  constructor = 1;
    InputChatlist chatlist = 3;
}

message TL_chatlists_getLeaveChatlistSuggestions {
    TLConstructor  constructor = 1;
    InputChatlist chatlist = 3;
}

message TL_chatlists_leaveChatlist {
    TLConstructor  constructor = 1;
    InputChatlist chatlist = 3;
    repeated InputPeer peers = 4;
}

message TL_stories_canSendStory {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
}

message TL_stories_sendStory {
    TLConstructor  constructor = 1;
    bool pinned = 3;
    bool noforwards = 4;
    bool fwd_modified = 5;
    InputPeer peer = 6;
    InputMedia media = 7;
    repeated MediaArea media_areas = 8;
    google.protobuf.StringValue caption = 9;
    repeated MessageEntity entities = 10;
    repeated InputPrivacyRule privacy_rules = 11;
    int64 random_id = 12;
    google.protobuf.Int32Value period = 13;
    InputPeer fwd_from_id = 14;
    google.protobuf.Int32Value fwd_from_story = 15;
}

message TL_stories_editStory {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 id = 4;
    InputMedia media = 5;
    repeated MediaArea media_areas = 6;
    google.protobuf.StringValue caption = 7;
    repeated MessageEntity entities = 8;
    repeated InputPrivacyRule privacy_rules = 9;
}

message TL_stories_deleteStories {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    repeated int32 id = 4;
}

message TL_stories_togglePinned {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    repeated int32 id = 4;
    Bool pinned = 5;
}

message TL_stories_getAllStories {
    TLConstructor  constructor = 1;
    bool next = 3;
    bool hidden = 4;
    google.protobuf.StringValue state = 5;
}

message TL_stories_getPinnedStories {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 offset_id = 4;
    int32 limit = 5;
    InputUser user_id = 6;
}

message TL_stories_getStoriesArchive {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 offset_id = 4;
    int32 limit = 5;
}

message TL_stories_getStoriesByID {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    repeated int32 id = 4;
    InputUser user_id = 5;
}

message TL_stories_toggleAllStoriesHidden {
    TLConstructor  constructor = 1;
    Bool hidden = 3;
}

message TL_stories_readStories {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 max_id = 4;
    InputUser user_id = 5;
}

message TL_stories_incrementStoryViews {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    repeated int32 id = 4;
    InputUser user_id = 5;
}

message TL_stories_getStoryViewsList {
    TLConstructor  constructor = 1;
    bool just_contacts = 3;
    bool reactions_first = 4;
    bool forwards_first = 5;
    InputPeer peer = 6;
    google.protobuf.StringValue q = 7;
    int32 id = 8;
    string offset = 9;
    int32 limit = 10;
    int32 offset_date = 11;
    int64 offset_id = 12;
}

message TL_stories_getStoriesViews {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    repeated int32 id = 4;
}

message TL_stories_exportStoryLink {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 id = 4;
    InputUser user_id = 5;
}

message TL_stories_report19D8EB45 {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    repeated int32 id = 4;
    bytes option = 5;
    string message = 6;
}

message TL_stories_activateStealthMode {
    TLConstructor  constructor = 1;
    bool past = 3;
    bool future = 4;
}

message TL_stories_sendReaction {
    TLConstructor  constructor = 1;
    bool add_to_recent = 3;
    InputPeer peer = 4;
    int32 story_id = 5;
    Reaction reaction = 6;
    InputUser user_id = 7;
}

message TL_stories_getPeerStories {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
}

message TL_stories_getAllReadPeerStories {
    TLConstructor  constructor = 1;
}

message TL_stories_getPeerMaxIDs {
    TLConstructor  constructor = 1;
    repeated InputPeer id = 3;
}

message TL_stories_getChatsToSend {
    TLConstructor  constructor = 1;
}

message TL_stories_togglePeerStoriesHidden {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    Bool hidden = 4;
}

message TL_stories_getStoryReactionsList {
    TLConstructor  constructor = 1;
    bool forwards_first = 3;
    InputPeer peer = 4;
    int32 id = 5;
    Reaction reaction = 6;
    google.protobuf.StringValue offset = 7;
    int32 limit = 8;
}

message TL_stories_togglePinnedToTop {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    repeated int32 id = 4;
}

message TL_stories_searchPosts {
    TLConstructor  constructor = 1;
    google.protobuf.StringValue hashtag = 3;
    MediaArea area = 4;
    InputPeer peer = 5;
    string offset = 6;
    int32 limit = 7;
}

message TL_premium_getBoostsList {
    TLConstructor  constructor = 1;
    bool gifts = 3;
    InputPeer peer = 4;
    string offset = 5;
    int32 limit = 6;
}

message TL_premium_getMyBoosts {
    TLConstructor  constructor = 1;
}

message TL_premium_applyBoost {
    TLConstructor  constructor = 1;
    repeated int32 slots = 3;
    InputPeer peer = 4;
}

message TL_premium_getBoostsStatus {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
}

message TL_premium_getUserBoosts {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    InputUser user_id = 4;
}

message TL_smsjobs_isEligibleToJoin {
    TLConstructor  constructor = 1;
}

message TL_smsjobs_join {
    TLConstructor  constructor = 1;
}

message TL_smsjobs_leave {
    TLConstructor  constructor = 1;
}

message TL_smsjobs_updateSettings {
    TLConstructor  constructor = 1;
    bool allow_international = 3;
}

message TL_smsjobs_getStatus {
    TLConstructor  constructor = 1;
}

message TL_smsjobs_getSmsJob {
    TLConstructor  constructor = 1;
    string job_id = 3;
}

message TL_smsjobs_finishJob {
    TLConstructor  constructor = 1;
    string job_id = 3;
    google.protobuf.StringValue error = 4;
}

message TL_fragment_getCollectibleInfo {
    TLConstructor  constructor = 1;
    InputCollectible collectible = 3;
}

message TL_payments_canPurchasePremium {
    TLConstructor  constructor = 1;
    InputStorePaymentPurpose purpose = 3;
}

message TL_users_getIsPremiumRequiredToContact {
    TLConstructor  constructor = 1;
    repeated InputUser id = 3;
}

message TL_payments_getUserStarGifts {
    TLConstructor  constructor = 1;
    InputUser user_id = 3;
    string offset = 4;
    int32 limit = 5;
}

message TL_payments_getUserStarGift {
    TLConstructor  constructor = 1;
    repeated int32 msg_id = 3;
}

message TL_messages_getWebPagePreview8B68B0CC {
    TLConstructor  constructor = 1;
    string message = 3;
    repeated MessageEntity entities = 4;
}

message TL_channels_viewSponsoredMessage {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    bytes random_id = 4;
}

message TL_channels_getSponsoredMessages {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
}

message TL_channels_clickSponsoredMessage {
    TLConstructor  constructor = 1;
    bool media = 3;
    bool fullscreen = 4;
    InputChannel channel = 5;
    bytes random_id = 6;
}

message TL_channels_reportSponsoredMessage {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    bytes random_id = 4;
    bytes option = 5;
}

message TL_messages_report8953AB4E {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    repeated int32 id = 4;
    ReportReason reason = 5;
    string message = 6;
}

message TL_stories_report1923FA8C {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    repeated int32 id = 4;
    ReportReason reason = 5;
    string message = 6;
}

message TL_messages_requestSimpleWebView1A46500A {
    TLConstructor  constructor = 1;
    bool from_switch_webview = 3;
    bool from_side_menu = 4;
    InputUser bot = 5;
    google.protobuf.StringValue url = 6;
    google.protobuf.StringValue start_param = 7;
    DataJSON theme_params = 8;
    string platform = 9;
}

message TL_messages_requestAppWebView8C5A3B3C {
    TLConstructor  constructor = 1;
    bool write_allowed = 3;
    InputPeer peer = 4;
    InputBotApp app = 5;
    google.protobuf.StringValue start_param = 6;
    DataJSON theme_params = 7;
    string platform = 8;
}

message TL_messages_addChatUserF24753E3 {
    TLConstructor  constructor = 1;
    int64 chat_id = 3;
    InputUser user_id = 4;
    int32 fwd_limit = 5;
}

message TL_messages_createChat34A818 {
    TLConstructor  constructor = 1;
    repeated InputUser users = 3;
    string title = 4;
    google.protobuf.Int32Value ttl_period = 5;
}

message TL_channels_inviteToChannel199F3A6C {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    repeated InputUser users = 4;
}

message TL_messages_getDialogFiltersF19ED96D {
    TLConstructor  constructor = 1;
}

message TL_help_getAppChangelog {
    TLConstructor  constructor = 1;
    string prev_app_version = 3;
}

message TL_stats_getMessagePublicForwards5630281B {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    int32 msg_id = 4;
    int32 offset_rate = 5;
    InputPeer offset_peer = 6;
    int32 offset_id = 7;
    int32 limit = 8;
}

message TL_stories_getBoostsStatus {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
}

message TL_stories_getBoostersList {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    string offset = 4;
    int32 limit = 5;
}

message TL_stories_canApplyBoost {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
}

message TL_stories_applyBoost {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
}

message TL_messages_getWebPage32CA8F91 {
    TLConstructor  constructor = 1;
    string url = 3;
    int32 hash = 4;
}

message TL_users_getStoriesMaxIDs {
    TLConstructor  constructor = 1;
    repeated InputUser id = 3;
}

message TL_contacts_toggleStoriesHidden {
    TLConstructor  constructor = 1;
    InputUser id = 3;
    Bool hidden = 4;
}

message TL_stories_getUserStories {
    TLConstructor  constructor = 1;
    InputUser user_id = 3;
}

message TL_stories_getAllReadUserStories {
    TLConstructor  constructor = 1;
}

message TL_stories_reportC95BE06A {
    TLConstructor  constructor = 1;
    InputUser user_id = 3;
    repeated int32 id = 4;
    ReportReason reason = 5;
    string message = 6;
}

message TL_messages_requestSimpleWebView299BEC8E {
    TLConstructor  constructor = 1;
    bool from_switch_webview = 3;
    InputUser bot = 4;
    string url = 5;
    DataJSON theme_params = 6;
    string platform = 7;
}

message TL_messages_getAllChats {
    TLConstructor  constructor = 1;
    repeated int64 except_ids = 3;
}

message TL_bots_getBotInfo75EC12E6 {
    TLConstructor  constructor = 1;
    string lang_code = 3;
}

message TL_folders_deleteFolder {
    TLConstructor  constructor = 1;
    int32 folder_id = 3;
}

message TL_messages_getMessageReadParticipants2C6F97B7 {
    TLConstructor  constructor = 1;
    InputPeer peer = 3;
    int32 msg_id = 4;
}

message TL_help_getAppConfig98914110 {
    TLConstructor  constructor = 1;
}

message TL_messages_createChat9CB126E {
    TLConstructor  constructor = 1;
    repeated InputUser users = 3;
    string title = 4;
}

message TL_account_verifyEmailECBA39DB {
    TLConstructor  constructor = 1;
    string email = 3;
    string code = 4;
}

message TL_messages_requestSimpleWebView6ABB2F73 {
    TLConstructor  constructor = 1;
    InputUser bot = 3;
    string url = 4;
    DataJSON theme_params = 5;
}

message TL_payments_requestRecurringPayment {
    TLConstructor  constructor = 1;
    InputUser user_id = 3;
    string recurring_init_charge = 4;
    InputMedia invoice_media = 5;
}

message TL_payments_restorePlayMarketReceipt {
    TLConstructor  constructor = 1;
    bytes receipt = 3;
}

message TL_channels_deleteHistoryAF369D42 {
    TLConstructor  constructor = 1;
    InputChannel channel = 3;
    int32 max_id = 4;
}

message TL_help_test {
    TLConstructor  constructor = 1;
}

message TL_predefined_createPredefinedUser {
    TLConstructor  constructor = 1;
    string phone = 3;
    google.protobuf.StringValue first_name = 4;
    google.protobuf.StringValue last_name = 5;
    google.protobuf.StringValue username = 6;
    string code = 7;
    bool verified = 8;
}

message TL_predefined_updatePredefinedUsername {
    TLConstructor  constructor = 1;
    string phone = 3;
    string username = 4;
}

message TL_predefined_updatePredefinedProfile {
    TLConstructor  constructor = 1;
    string phone = 3;
    google.protobuf.StringValue first_name = 4;
    google.protobuf.StringValue last_name = 5;
    google.protobuf.StringValue about = 6;
}

message TL_predefined_updatePredefinedVerified {
    TLConstructor  constructor = 1;
    string phone = 3;
    bool verified = 4;
}

message TL_predefined_updatePredefinedCode {
    TLConstructor  constructor = 1;
    string phone = 3;
    string code = 4;
}

message TL_predefined_getPredefinedUser {
    TLConstructor  constructor = 1;
    string phone = 3;
}

message TL_predefined_getPredefinedUsers {
    TLConstructor  constructor = 1;
}

message TL_users_getMe {
    TLConstructor  constructor = 1;
    int64 id = 3;
    string token = 4;
}

message TL_account_updateVerified {
    TLConstructor  constructor = 1;
    int64 id = 3;
    bool verified = 4;
}

message TL_auth_toggleBan {
    TLConstructor  constructor = 1;
    string phone = 3;
    bool predefined = 4;
    google.protobuf.Int32Value expires = 5;
    google.protobuf.StringValue reason = 6;
}

message TL_biz_invokeBizDataRaw {
    TLConstructor  constructor = 1;
    BizDataRaw biz_data = 3;
}


//--------------------------------------------------------------------------------------------
// Vector api result type
message Vector_SecureValue {
    repeated SecureValue datas = 1;
}
message Vector_WallPaper {
    repeated WallPaper datas = 1;
}
message Vector_User {
    repeated User datas = 1;
}
message Vector_RequirementToContact {
    repeated RequirementToContact datas = 1;
}
message Vector_Int {
    repeated int32 datas = 1;
}
message Vector_ContactStatus {
    repeated ContactStatus datas = 1;
}
message Vector_SavedContact {
    repeated SavedContact datas = 1;
}
message Vector_ReceivedNotifyMessage {
    repeated ReceivedNotifyMessage datas = 1;
}
message Vector_Long {
    repeated int64 datas = 1;
}
message Vector_StickerSetCovered {
    repeated StickerSetCovered datas = 1;
}
message Vector_MessageRange {
    repeated MessageRange datas = 1;
}
message Vector_DialogPeer {
    repeated DialogPeer datas = 1;
}
message Vector_EmojiLanguage {
    repeated EmojiLanguage datas = 1;
}
message Vector_Messages_SearchCounter {
    repeated messages_SearchCounter datas = 1;
}
message Vector_DialogFilterSuggested {
    repeated DialogFilterSuggested datas = 1;
}
message Vector_ReadParticipantDate {
    repeated ReadParticipantDate datas = 1;
}
message Vector_Document {
    repeated Document datas = 1;
}
message Vector_FactCheck {
    repeated FactCheck datas = 1;
}
message Vector_FileHash {
    repeated FileHash datas = 1;
}
message Vector_BotCommand {
    repeated BotCommand datas = 1;
}
message Vector_BotPreviewMedia {
    repeated BotPreviewMedia datas = 1;
}
message Vector_PremiumGiftCodeOption {
    repeated PremiumGiftCodeOption datas = 1;
}
message Vector_StarsTopupOption {
    repeated StarsTopupOption datas = 1;
}
message Vector_StarsGiftOption {
    repeated StarsGiftOption datas = 1;
}
message Vector_StarsGiveawayOption {
    repeated StarsGiveawayOption datas = 1;
}
message Vector_LangPackString {
    repeated LangPackString datas = 1;
}
message Vector_LangPackLanguage {
    repeated LangPackLanguage datas = 1;
}
message Vector_Peer {
    repeated Peer datas = 1;
}
message Vector_Bool {
    repeated Bool datas = 1;
}
message Vector_DialogFilter {
    repeated DialogFilter datas = 1;
}
message Vector_String {
    repeated string datas = 1;
}
message Vector_PredefinedUser {
    repeated PredefinedUser datas = 1;
}


//--------------------------------------------------------------------------------------------
// rpc

service RPCAccentColors {
    rpc account_updateColor(TL_account_updateColor) returns (Bool) {}
    rpc account_getDefaultBackgroundEmojis(TL_account_getDefaultBackgroundEmojis) returns (EmojiList) {}
    rpc help_getPeerColors(TL_help_getPeerColors) returns (help_PeerColors) {}
    rpc help_getPeerProfileColors(TL_help_getPeerProfileColors) returns (help_PeerColors) {}
    rpc channels_updateColor(TL_channels_updateColor) returns (Updates) {}
}

service RPCAccount {
    rpc account_deleteAccount(TL_account_deleteAccount) returns (Bool) {}
    rpc account_getAccountTTL(TL_account_getAccountTTL) returns (AccountDaysTTL) {}
    rpc account_setAccountTTL(TL_account_setAccountTTL) returns (Bool) {}
    rpc account_sendChangePhoneCode(TL_account_sendChangePhoneCode) returns (auth_SentCode) {}
    rpc account_changePhone(TL_account_changePhone) returns (User) {}
    rpc account_resetAuthorization(TL_account_resetAuthorization) returns (Bool) {}
    rpc account_sendConfirmPhoneCode(TL_account_sendConfirmPhoneCode) returns (auth_SentCode) {}
    rpc account_confirmPhone(TL_account_confirmPhone) returns (Bool) {}
}

service RPCAffiliatePrograms {
    rpc bots_updateStarRefProgram(TL_bots_updateStarRefProgram) returns (StarRefProgram) {}
    rpc payments_getConnectedStarRefBots(TL_payments_getConnectedStarRefBots) returns (payments_ConnectedStarRefBots) {}
    rpc payments_getConnectedStarRefBot(TL_payments_getConnectedStarRefBot) returns (payments_ConnectedStarRefBots) {}
    rpc payments_getSuggestedStarRefBots(TL_payments_getSuggestedStarRefBots) returns (payments_SuggestedStarRefBots) {}
    rpc payments_connectStarRefBot(TL_payments_connectStarRefBot) returns (payments_ConnectedStarRefBots) {}
    rpc payments_editConnectedStarRefBot(TL_payments_editConnectedStarRefBot) returns (payments_ConnectedStarRefBots) {}
}

service RPCAntiSpam {
    rpc channels_toggleAntiSpam(TL_channels_toggleAntiSpam) returns (Updates) {}
    rpc channels_reportAntiSpamFalsePositive(TL_channels_reportAntiSpamFalsePositive) returns (Bool) {}
}

service RPCAuthorization {
    rpc auth_sendCode(TL_auth_sendCode) returns (auth_SentCode) {}
    rpc auth_signUp(TL_auth_signUp) returns (auth_Authorization) {}
    rpc auth_signIn(TL_auth_signIn) returns (auth_Authorization) {}
    rpc auth_logOut(TL_auth_logOut) returns (auth_LoggedOut) {}
    rpc auth_resetAuthorizations(TL_auth_resetAuthorizations) returns (Bool) {}
    rpc auth_exportAuthorization(TL_auth_exportAuthorization) returns (auth_ExportedAuthorization) {}
    rpc auth_importAuthorization(TL_auth_importAuthorization) returns (auth_Authorization) {}
    rpc auth_bindTempAuthKey(TL_auth_bindTempAuthKey) returns (Bool) {}
    rpc auth_importBotAuthorization(TL_auth_importBotAuthorization) returns (auth_Authorization) {}
    rpc auth_checkPassword(TL_auth_checkPassword) returns (auth_Authorization) {}
    rpc auth_requestPasswordRecovery(TL_auth_requestPasswordRecovery) returns (auth_PasswordRecovery) {}
    rpc auth_recoverPassword(TL_auth_recoverPassword) returns (auth_Authorization) {}
    rpc auth_resendCode(TL_auth_resendCode) returns (auth_SentCode) {}
    rpc auth_cancelCode(TL_auth_cancelCode) returns (Bool) {}
    rpc auth_dropTempAuthKeys(TL_auth_dropTempAuthKeys) returns (Bool) {}
    rpc auth_checkRecoveryPassword(TL_auth_checkRecoveryPassword) returns (Bool) {}
    rpc auth_importWebTokenAuthorization(TL_auth_importWebTokenAuthorization) returns (auth_Authorization) {}
    rpc auth_requestFirebaseSms(TL_auth_requestFirebaseSms) returns (Bool) {}
    rpc auth_resetLoginEmail(TL_auth_resetLoginEmail) returns (auth_SentCode) {}
    rpc auth_reportMissingCode(TL_auth_reportMissingCode) returns (Bool) {}
    rpc account_sendVerifyEmailCode(TL_account_sendVerifyEmailCode) returns (account_SentEmailCode) {}
    rpc account_verifyEmail32DA4CF(TL_account_verifyEmail32DA4CF) returns (account_EmailVerified) {}
    rpc account_resetPassword(TL_account_resetPassword) returns (account_ResetPasswordResult) {}
    rpc account_setAuthorizationTTL(TL_account_setAuthorizationTTL) returns (Bool) {}
    rpc account_changeAuthorizationSettings(TL_account_changeAuthorizationSettings) returns (Bool) {}
    rpc account_invalidateSignInCodes(TL_account_invalidateSignInCodes) returns (Bool) {}
    rpc account_verifyEmailECBA39DB(TL_account_verifyEmailECBA39DB) returns (Bool) {}
    rpc auth_toggleBan(TL_auth_toggleBan) returns (PredefinedUser) {}
}

service RPCAutoDownload {
    rpc account_getAutoDownloadSettings(TL_account_getAutoDownloadSettings) returns (account_AutoDownloadSettings) {}
    rpc account_saveAutoDownloadSettings(TL_account_saveAutoDownloadSettings) returns (Bool) {}
}

service RPCAutosave {
    rpc account_getAutoSaveSettings(TL_account_getAutoSaveSettings) returns (account_AutoSaveSettings) {}
    rpc account_saveAutoSaveSettings(TL_account_saveAutoSaveSettings) returns (Bool) {}
    rpc account_deleteAutoSaveExceptions(TL_account_deleteAutoSaveExceptions) returns (Bool) {}
}

service RPCBoosts {
    rpc channels_setBoostsToUnblockRestrictions(TL_channels_setBoostsToUnblockRestrictions) returns (Updates) {}
    rpc premium_getBoostsList(TL_premium_getBoostsList) returns (premium_BoostsList) {}
    rpc premium_getMyBoosts(TL_premium_getMyBoosts) returns (premium_MyBoosts) {}
    rpc premium_applyBoost(TL_premium_applyBoost) returns (premium_MyBoosts) {}
    rpc premium_getBoostsStatus(TL_premium_getBoostsStatus) returns (premium_BoostsStatus) {}
    rpc premium_getUserBoosts(TL_premium_getUserBoosts) returns (premium_BoostsList) {}
    rpc stories_getBoostsStatus(TL_stories_getBoostsStatus) returns (stories_BoostsStatus) {}
    rpc stories_getBoostersList(TL_stories_getBoostersList) returns (stories_BoostersList) {}
    rpc stories_canApplyBoost(TL_stories_canApplyBoost) returns (stories_CanApplyBoostResult) {}
    rpc stories_applyBoost(TL_stories_applyBoost) returns (Bool) {}
}

service RPCBotAdminRight {
    rpc bots_setBotBroadcastDefaultAdminRights(TL_bots_setBotBroadcastDefaultAdminRights) returns (Bool) {}
    rpc bots_setBotGroupDefaultAdminRights(TL_bots_setBotGroupDefaultAdminRights) returns (Bool) {}
}

service RPCBotMenu {
    rpc messages_getAttachMenuBots(TL_messages_getAttachMenuBots) returns (AttachMenuBots) {}
    rpc messages_getAttachMenuBot(TL_messages_getAttachMenuBot) returns (AttachMenuBotsBot) {}
    rpc messages_toggleBotInAttachMenu(TL_messages_toggleBotInAttachMenu) returns (Bool) {}
}

service RPCBotMenuButton {
    rpc bots_setBotMenuButton(TL_bots_setBotMenuButton) returns (Bool) {}
    rpc bots_getBotMenuButton(TL_bots_getBotMenuButton) returns (BotMenuButton) {}
}

service RPCBots {
    rpc bots_setBotCommands(TL_bots_setBotCommands) returns (Bool) {}
    rpc bots_resetBotCommands(TL_bots_resetBotCommands) returns (Bool) {}
    rpc bots_getBotCommands(TL_bots_getBotCommands) returns (Vector_BotCommand) {}
    rpc bots_setBotInfo(TL_bots_setBotInfo) returns (Bool) {}
    rpc bots_getBotInfoDCD914FD(TL_bots_getBotInfoDCD914FD) returns (bots_BotInfo) {}
    rpc bots_getAdminedBots(TL_bots_getAdminedBots) returns (Vector_User) {}
    rpc bots_setCustomVerification(TL_bots_setCustomVerification) returns (Bool) {}
    rpc bots_getBotRecommendations(TL_bots_getBotRecommendations) returns (users_Users) {}
    rpc bots_getBotInfo75EC12E6(TL_bots_getBotInfo75EC12E6) returns (Vector_String) {}
}

service RPCBusinessChatLinks {
    rpc account_createBusinessChatLink(TL_account_createBusinessChatLink) returns (BusinessChatLink) {}
    rpc account_editBusinessChatLink(TL_account_editBusinessChatLink) returns (BusinessChatLink) {}
    rpc account_deleteBusinessChatLink(TL_account_deleteBusinessChatLink) returns (Bool) {}
    rpc account_getBusinessChatLinks(TL_account_getBusinessChatLinks) returns (account_BusinessChatLinks) {}
    rpc account_resolveBusinessChatLink(TL_account_resolveBusinessChatLink) returns (account_ResolvedBusinessChatLinks) {}
}

service RPCBusinessConnectedBots {
    rpc account_updateConnectedBot(TL_account_updateConnectedBot) returns (Updates) {}
    rpc account_getConnectedBots(TL_account_getConnectedBots) returns (account_ConnectedBots) {}
    rpc account_getBotBusinessConnection(TL_account_getBotBusinessConnection) returns (Updates) {}
    rpc account_toggleConnectedBotPaused(TL_account_toggleConnectedBotPaused) returns (Bool) {}
    rpc account_disablePeerConnectedBot(TL_account_disablePeerConnectedBot) returns (Bool) {}
}

service RPCBusinessGreeting {
    rpc account_updateBusinessGreetingMessage(TL_account_updateBusinessGreetingMessage) returns (Bool) {}
    rpc account_updateBusinessAwayMessage(TL_account_updateBusinessAwayMessage) returns (Bool) {}
}

service RPCBusinessIntro {
    rpc account_updateBusinessIntro(TL_account_updateBusinessIntro) returns (Bool) {}
}

service RPCBusinessLocation {
    rpc account_updateBusinessLocation(TL_account_updateBusinessLocation) returns (Bool) {}
}

service RPCBusinessOpeningHours {
    rpc account_updateBusinessWorkHours(TL_account_updateBusinessWorkHours) returns (Bool) {}
}

service RPCBusinessQuickReply {
    rpc messages_getQuickReplies(TL_messages_getQuickReplies) returns (messages_QuickReplies) {}
    rpc messages_reorderQuickReplies(TL_messages_reorderQuickReplies) returns (Bool) {}
    rpc messages_checkQuickReplyShortcut(TL_messages_checkQuickReplyShortcut) returns (Bool) {}
    rpc messages_editQuickReplyShortcut(TL_messages_editQuickReplyShortcut) returns (Bool) {}
    rpc messages_deleteQuickReplyShortcut(TL_messages_deleteQuickReplyShortcut) returns (Bool) {}
    rpc messages_getQuickReplyMessages(TL_messages_getQuickReplyMessages) returns (messages_Messages) {}
    rpc messages_sendQuickReplyMessages(TL_messages_sendQuickReplyMessages) returns (Updates) {}
    rpc messages_deleteQuickReplyMessages(TL_messages_deleteQuickReplyMessages) returns (Updates) {}
}

service RPCChannelAdRevenue {
    rpc stats_getBroadcastRevenueStats(TL_stats_getBroadcastRevenueStats) returns (stats_BroadcastRevenueStats) {}
    rpc stats_getBroadcastRevenueWithdrawalUrl(TL_stats_getBroadcastRevenueWithdrawalUrl) returns (stats_BroadcastRevenueWithdrawalUrl) {}
    rpc stats_getBroadcastRevenueTransactions(TL_stats_getBroadcastRevenueTransactions) returns (stats_BroadcastRevenueTransactions) {}
}

service RPCChannelRecommendations {
    rpc channels_getChannelRecommendations(TL_channels_getChannelRecommendations) returns (messages_Chats) {}
}

service RPCChannels {
    rpc channels_readHistory(TL_channels_readHistory) returns (Bool) {}
    rpc channels_deleteMessages(TL_channels_deleteMessages) returns (messages_AffectedMessages) {}
    rpc channels_getMessages(TL_channels_getMessages) returns (messages_Messages) {}
    rpc channels_getParticipants(TL_channels_getParticipants) returns (channels_ChannelParticipants) {}
    rpc channels_getParticipant(TL_channels_getParticipant) returns (channels_ChannelParticipant) {}
    rpc channels_getChannels(TL_channels_getChannels) returns (messages_Chats) {}
    rpc channels_getFullChannel(TL_channels_getFullChannel) returns (messages_ChatFull) {}
    rpc channels_createChannel(TL_channels_createChannel) returns (Updates) {}
    rpc channels_editAdmin(TL_channels_editAdmin) returns (Updates) {}
    rpc channels_editTitle(TL_channels_editTitle) returns (Updates) {}
    rpc channels_editPhoto(TL_channels_editPhoto) returns (Updates) {}
    rpc channels_joinChannel(TL_channels_joinChannel) returns (Updates) {}
    rpc channels_leaveChannel(TL_channels_leaveChannel) returns (Updates) {}
    rpc channels_inviteToChannelC9E33D54(TL_channels_inviteToChannelC9E33D54) returns (messages_InvitedUsers) {}
    rpc channels_deleteChannel(TL_channels_deleteChannel) returns (Updates) {}
    rpc channels_exportMessageLink(TL_channels_exportMessageLink) returns (ExportedMessageLink) {}
    rpc channels_toggleSignatures(TL_channels_toggleSignatures) returns (Updates) {}
    rpc channels_getAdminedPublicChannels(TL_channels_getAdminedPublicChannels) returns (messages_Chats) {}
    rpc channels_editBanned(TL_channels_editBanned) returns (Updates) {}
    rpc channels_getAdminLog(TL_channels_getAdminLog) returns (channels_AdminLogResults) {}
    rpc channels_setStickers(TL_channels_setStickers) returns (Bool) {}
    rpc channels_readMessageContents(TL_channels_readMessageContents) returns (Bool) {}
    rpc channels_deleteHistory9BAA9647(TL_channels_deleteHistory9BAA9647) returns (Updates) {}
    rpc channels_togglePreHistoryHidden(TL_channels_togglePreHistoryHidden) returns (Updates) {}
    rpc channels_getGroupsForDiscussion(TL_channels_getGroupsForDiscussion) returns (messages_Chats) {}
    rpc channels_setDiscussionGroup(TL_channels_setDiscussionGroup) returns (Bool) {}
    rpc channels_editCreator(TL_channels_editCreator) returns (Updates) {}
    rpc channels_editLocation(TL_channels_editLocation) returns (Bool) {}
    rpc channels_toggleSlowMode(TL_channels_toggleSlowMode) returns (Updates) {}
    rpc channels_getInactiveChannels(TL_channels_getInactiveChannels) returns (messages_InactiveChats) {}
    rpc channels_deleteParticipantHistory(TL_channels_deleteParticipantHistory) returns (messages_AffectedHistory) {}
    rpc channels_toggleParticipantsHidden(TL_channels_toggleParticipantsHidden) returns (Updates) {}
    rpc channels_inviteToChannel199F3A6C(TL_channels_inviteToChannel199F3A6C) returns (Updates) {}
    rpc channels_deleteHistoryAF369D42(TL_channels_deleteHistoryAF369D42) returns (Bool) {}
}

service RPCChatInvites {
    rpc messages_exportChatInvite(TL_messages_exportChatInvite) returns (ExportedChatInvite) {}
    rpc messages_checkChatInvite(TL_messages_checkChatInvite) returns (ChatInvite) {}
    rpc messages_importChatInvite(TL_messages_importChatInvite) returns (Updates) {}
    rpc messages_getExportedChatInvites(TL_messages_getExportedChatInvites) returns (messages_ExportedChatInvites) {}
    rpc messages_getExportedChatInvite(TL_messages_getExportedChatInvite) returns (messages_ExportedChatInvite) {}
    rpc messages_editExportedChatInvite(TL_messages_editExportedChatInvite) returns (messages_ExportedChatInvite) {}
    rpc messages_deleteRevokedExportedChatInvites(TL_messages_deleteRevokedExportedChatInvites) returns (Bool) {}
    rpc messages_deleteExportedChatInvite(TL_messages_deleteExportedChatInvite) returns (Bool) {}
    rpc messages_getAdminsWithInvites(TL_messages_getAdminsWithInvites) returns (messages_ChatAdminsWithInvites) {}
    rpc messages_getChatInviteImporters(TL_messages_getChatInviteImporters) returns (messages_ChatInviteImporters) {}
    rpc messages_hideChatJoinRequest(TL_messages_hideChatJoinRequest) returns (Updates) {}
    rpc messages_hideAllChatJoinRequests(TL_messages_hideAllChatJoinRequests) returns (Updates) {}
    rpc channels_toggleJoinToSend(TL_channels_toggleJoinToSend) returns (Updates) {}
    rpc channels_toggleJoinRequest(TL_channels_toggleJoinRequest) returns (Updates) {}
}

service RPCChats {
    rpc messages_getChats(TL_messages_getChats) returns (messages_Chats) {}
    rpc messages_getFullChat(TL_messages_getFullChat) returns (messages_ChatFull) {}
    rpc messages_editChatTitle(TL_messages_editChatTitle) returns (Updates) {}
    rpc messages_editChatPhoto(TL_messages_editChatPhoto) returns (Updates) {}
    rpc messages_addChatUserCBC6D107(TL_messages_addChatUserCBC6D107) returns (messages_InvitedUsers) {}
    rpc messages_deleteChatUser(TL_messages_deleteChatUser) returns (Updates) {}
    rpc messages_createChat92CEDDD4(TL_messages_createChat92CEDDD4) returns (messages_InvitedUsers) {}
    rpc messages_editChatAdmin(TL_messages_editChatAdmin) returns (Bool) {}
    rpc messages_migrateChat(TL_messages_migrateChat) returns (Updates) {}
    rpc messages_getCommonChats(TL_messages_getCommonChats) returns (messages_Chats) {}
    rpc messages_editChatAbout(TL_messages_editChatAbout) returns (Bool) {}
    rpc messages_editChatDefaultBannedRights(TL_messages_editChatDefaultBannedRights) returns (Updates) {}
    rpc messages_deleteChat(TL_messages_deleteChat) returns (Bool) {}
    rpc messages_getMessageReadParticipants31C1C44F(TL_messages_getMessageReadParticipants31C1C44F) returns (Vector_ReadParticipantDate) {}
    rpc channels_convertToGigagroup(TL_channels_convertToGigagroup) returns (Updates) {}
    rpc channels_setEmojiStickers(TL_channels_setEmojiStickers) returns (Bool) {}
    rpc messages_addChatUserF24753E3(TL_messages_addChatUserF24753E3) returns (Updates) {}
    rpc messages_createChat34A818(TL_messages_createChat34A818) returns (Updates) {}
    rpc messages_getAllChats(TL_messages_getAllChats) returns (messages_Chats) {}
    rpc messages_getMessageReadParticipants2C6F97B7(TL_messages_getMessageReadParticipants2C6F97B7) returns (Vector_Long) {}
    rpc messages_createChat9CB126E(TL_messages_createChat9CB126E) returns (Updates) {}
}

service RPCConfiguration {
    rpc help_getConfig(TL_help_getConfig) returns (Config) {}
    rpc help_getNearestDc(TL_help_getNearestDc) returns (NearestDc) {}
    rpc help_getAppUpdate(TL_help_getAppUpdate) returns (help_AppUpdate) {}
    rpc help_getInviteText(TL_help_getInviteText) returns (help_InviteText) {}
    rpc help_getSupport(TL_help_getSupport) returns (help_Support) {}
    rpc help_getAppConfig61E3F854(TL_help_getAppConfig61E3F854) returns (help_AppConfig) {}
    rpc help_getSupportName(TL_help_getSupportName) returns (help_SupportName) {}
    rpc help_dismissSuggestion(TL_help_dismissSuggestion) returns (Bool) {}
    rpc help_getCountriesList(TL_help_getCountriesList) returns (help_CountriesList) {}
    rpc help_getAppChangelog(TL_help_getAppChangelog) returns (Updates) {}
    rpc help_getAppConfig98914110(TL_help_getAppConfig98914110) returns (JSONValue) {}
}

service RPCContacts {
    rpc account_getContactSignUpNotification(TL_account_getContactSignUpNotification) returns (Bool) {}
    rpc account_setContactSignUpNotification(TL_account_setContactSignUpNotification) returns (Bool) {}
    rpc contacts_getContactIDs(TL_contacts_getContactIDs) returns (Vector_Int) {}
    rpc contacts_getStatuses(TL_contacts_getStatuses) returns (Vector_ContactStatus) {}
    rpc contacts_getContacts(TL_contacts_getContacts) returns (contacts_Contacts) {}
    rpc contacts_importContacts(TL_contacts_importContacts) returns (contacts_ImportedContacts) {}
    rpc contacts_deleteContacts(TL_contacts_deleteContacts) returns (Updates) {}
    rpc contacts_deleteByPhones(TL_contacts_deleteByPhones) returns (Bool) {}
    rpc contacts_block(TL_contacts_block) returns (Bool) {}
    rpc contacts_unblock(TL_contacts_unblock) returns (Bool) {}
    rpc contacts_getBlocked(TL_contacts_getBlocked) returns (contacts_Blocked) {}
    rpc contacts_search(TL_contacts_search) returns (contacts_Found) {}
    rpc contacts_getTopPeers(TL_contacts_getTopPeers) returns (contacts_TopPeers) {}
    rpc contacts_resetTopPeerRating(TL_contacts_resetTopPeerRating) returns (Bool) {}
    rpc contacts_resetSaved(TL_contacts_resetSaved) returns (Bool) {}
    rpc contacts_getSaved(TL_contacts_getSaved) returns (Vector_SavedContact) {}
    rpc contacts_toggleTopPeers(TL_contacts_toggleTopPeers) returns (Bool) {}
    rpc contacts_addContact(TL_contacts_addContact) returns (Updates) {}
    rpc contacts_acceptContact(TL_contacts_acceptContact) returns (Updates) {}
    rpc contacts_getLocated(TL_contacts_getLocated) returns (Updates) {}
    rpc contacts_editCloseFriends(TL_contacts_editCloseFriends) returns (Bool) {}
    rpc contacts_setBlocked(TL_contacts_setBlocked) returns (Bool) {}
}

service RPCCustomEmojis {
    rpc account_getDefaultProfilePhotoEmojis(TL_account_getDefaultProfilePhotoEmojis) returns (EmojiList) {}
    rpc account_getDefaultGroupPhotoEmojis(TL_account_getDefaultGroupPhotoEmojis) returns (EmojiList) {}
    rpc messages_getCustomEmojiDocuments(TL_messages_getCustomEmojiDocuments) returns (Vector_Document) {}
    rpc messages_getEmojiStickers(TL_messages_getEmojiStickers) returns (messages_AllStickers) {}
    rpc messages_getFeaturedEmojiStickers(TL_messages_getFeaturedEmojiStickers) returns (messages_FeaturedStickers) {}
    rpc messages_searchCustomEmoji(TL_messages_searchCustomEmoji) returns (EmojiList) {}
}

service RPCDeepLinks {
    rpc messages_startBot(TL_messages_startBot) returns (Updates) {}
    rpc help_getRecentMeUrls(TL_help_getRecentMeUrls) returns (help_RecentMeUrls) {}
    rpc help_getDeepLinkInfo(TL_help_getDeepLinkInfo) returns (help_DeepLinkInfo) {}
}

service RPCDialogs {
    rpc messages_getDialogs(TL_messages_getDialogs) returns (messages_Dialogs) {}
    rpc messages_setTyping(TL_messages_setTyping) returns (Bool) {}
    rpc messages_getPeerSettings(TL_messages_getPeerSettings) returns (messages_PeerSettings) {}
    rpc messages_getPeerDialogs(TL_messages_getPeerDialogs) returns (messages_PeerDialogs) {}
    rpc messages_toggleDialogPin(TL_messages_toggleDialogPin) returns (Bool) {}
    rpc messages_reorderPinnedDialogs(TL_messages_reorderPinnedDialogs) returns (Bool) {}
    rpc messages_getPinnedDialogs(TL_messages_getPinnedDialogs) returns (messages_PeerDialogs) {}
    rpc messages_sendScreenshotNotification(TL_messages_sendScreenshotNotification) returns (Updates) {}
    rpc messages_markDialogUnread(TL_messages_markDialogUnread) returns (Bool) {}
    rpc messages_getDialogUnreadMarks(TL_messages_getDialogUnreadMarks) returns (Vector_DialogPeer) {}
    rpc messages_getOnlines(TL_messages_getOnlines) returns (ChatOnlines) {}
    rpc messages_hidePeerSettingsBar(TL_messages_hidePeerSettingsBar) returns (Bool) {}
    rpc messages_setHistoryTTL(TL_messages_setHistoryTTL) returns (Updates) {}
}

service RPCDrafts {
    rpc messages_saveDraft(TL_messages_saveDraft) returns (Bool) {}
    rpc messages_getAllDrafts(TL_messages_getAllDrafts) returns (Updates) {}
    rpc messages_clearAllDrafts(TL_messages_clearAllDrafts) returns (Bool) {}
}

service RPCEmoji {
    rpc messages_getEmojiKeywords(TL_messages_getEmojiKeywords) returns (EmojiKeywordsDifference) {}
    rpc messages_getEmojiKeywordsDifference(TL_messages_getEmojiKeywordsDifference) returns (EmojiKeywordsDifference) {}
    rpc messages_getEmojiKeywordsLanguages(TL_messages_getEmojiKeywordsLanguages) returns (Vector_EmojiLanguage) {}
    rpc messages_getEmojiURL(TL_messages_getEmojiURL) returns (EmojiURL) {}
}

service RPCEmojiCategories {
    rpc messages_getEmojiGroups(TL_messages_getEmojiGroups) returns (messages_EmojiGroups) {}
    rpc messages_getEmojiStatusGroups(TL_messages_getEmojiStatusGroups) returns (messages_EmojiGroups) {}
    rpc messages_getEmojiProfilePhotoGroups(TL_messages_getEmojiProfilePhotoGroups) returns (messages_EmojiGroups) {}
    rpc messages_getEmojiStickerGroups(TL_messages_getEmojiStickerGroups) returns (messages_EmojiGroups) {}
}

service RPCEmojiStatus {
    rpc account_updateEmojiStatus(TL_account_updateEmojiStatus) returns (Bool) {}
    rpc account_getDefaultEmojiStatuses(TL_account_getDefaultEmojiStatuses) returns (account_EmojiStatuses) {}
    rpc account_getRecentEmojiStatuses(TL_account_getRecentEmojiStatuses) returns (account_EmojiStatuses) {}
    rpc account_clearRecentEmojiStatuses(TL_account_clearRecentEmojiStatuses) returns (Bool) {}
    rpc account_getChannelDefaultEmojiStatuses(TL_account_getChannelDefaultEmojiStatuses) returns (account_EmojiStatuses) {}
    rpc account_getChannelRestrictedStatusEmojis(TL_account_getChannelRestrictedStatusEmojis) returns (EmojiList) {}
    rpc account_getCollectibleEmojiStatuses(TL_account_getCollectibleEmojiStatuses) returns (account_EmojiStatuses) {}
    rpc channels_updateEmojiStatus(TL_channels_updateEmojiStatus) returns (Updates) {}
    rpc bots_updateUserEmojiStatus(TL_bots_updateUserEmojiStatus) returns (Bool) {}
    rpc bots_toggleUserEmojiStatusPermission(TL_bots_toggleUserEmojiStatusPermission) returns (Bool) {}
}

service RPCFactChecks {
    rpc messages_editFactCheck(TL_messages_editFactCheck) returns (Updates) {}
    rpc messages_deleteFactCheck(TL_messages_deleteFactCheck) returns (Updates) {}
    rpc messages_getFactCheck(TL_messages_getFactCheck) returns (Vector_FactCheck) {}
}

service RPCFiles {
    rpc messages_getDocumentByHash(TL_messages_getDocumentByHash) returns (Document) {}
    rpc messages_uploadMedia(TL_messages_uploadMedia) returns (MessageMedia) {}
    rpc messages_uploadEncryptedFile(TL_messages_uploadEncryptedFile) returns (EncryptedFile) {}
    rpc upload_saveFilePart(TL_upload_saveFilePart) returns (Bool) {}
    rpc upload_getFile(TL_upload_getFile) returns (upload_File) {}
    rpc upload_saveBigFilePart(TL_upload_saveBigFilePart) returns (Bool) {}
    rpc upload_getWebFile(TL_upload_getWebFile) returns (upload_WebFile) {}
    rpc upload_getCdnFile(TL_upload_getCdnFile) returns (upload_CdnFile) {}
    rpc upload_reuploadCdnFile(TL_upload_reuploadCdnFile) returns (Vector_FileHash) {}
    rpc upload_getCdnFileHashes(TL_upload_getCdnFileHashes) returns (Vector_FileHash) {}
    rpc upload_getFileHashes(TL_upload_getFileHashes) returns (Vector_FileHash) {}
    rpc help_getCdnConfig(TL_help_getCdnConfig) returns (CdnConfig) {}
}

service RPCFolderTags {
    rpc messages_toggleDialogFilterTags(TL_messages_toggleDialogFilterTags) returns (Bool) {}
}

service RPCFolders {
    rpc messages_getDialogFiltersEFD48C89(TL_messages_getDialogFiltersEFD48C89) returns (messages_DialogFilters) {}
    rpc messages_getSuggestedDialogFilters(TL_messages_getSuggestedDialogFilters) returns (Vector_DialogFilterSuggested) {}
    rpc messages_updateDialogFilter(TL_messages_updateDialogFilter) returns (Bool) {}
    rpc messages_updateDialogFiltersOrder(TL_messages_updateDialogFiltersOrder) returns (Bool) {}
    rpc folders_editPeerFolders(TL_folders_editPeerFolders) returns (Updates) {}
    rpc chatlists_exportChatlistInvite(TL_chatlists_exportChatlistInvite) returns (chatlists_ExportedChatlistInvite) {}
    rpc chatlists_deleteExportedInvite(TL_chatlists_deleteExportedInvite) returns (Bool) {}
    rpc chatlists_editExportedInvite(TL_chatlists_editExportedInvite) returns (ExportedChatlistInvite) {}
    rpc chatlists_getExportedInvites(TL_chatlists_getExportedInvites) returns (chatlists_ExportedInvites) {}
    rpc chatlists_checkChatlistInvite(TL_chatlists_checkChatlistInvite) returns (chatlists_ChatlistInvite) {}
    rpc chatlists_joinChatlistInvite(TL_chatlists_joinChatlistInvite) returns (Updates) {}
    rpc chatlists_getChatlistUpdates(TL_chatlists_getChatlistUpdates) returns (chatlists_ChatlistUpdates) {}
    rpc chatlists_joinChatlistUpdates(TL_chatlists_joinChatlistUpdates) returns (Updates) {}
    rpc chatlists_hideChatlistUpdates(TL_chatlists_hideChatlistUpdates) returns (Bool) {}
    rpc chatlists_getLeaveChatlistSuggestions(TL_chatlists_getLeaveChatlistSuggestions) returns (Vector_Peer) {}
    rpc chatlists_leaveChatlist(TL_chatlists_leaveChatlist) returns (Updates) {}
    rpc messages_getDialogFiltersF19ED96D(TL_messages_getDialogFiltersF19ED96D) returns (Vector_DialogFilter) {}
    rpc folders_deleteFolder(TL_folders_deleteFolder) returns (Updates) {}
}

service RPCForums {
    rpc channels_toggleForum(TL_channels_toggleForum) returns (Updates) {}
    rpc channels_createForumTopic(TL_channels_createForumTopic) returns (Updates) {}
    rpc channels_getForumTopics(TL_channels_getForumTopics) returns (messages_ForumTopics) {}
    rpc channels_getForumTopicsByID(TL_channels_getForumTopicsByID) returns (messages_ForumTopics) {}
    rpc channels_editForumTopic(TL_channels_editForumTopic) returns (Updates) {}
    rpc channels_updatePinnedForumTopic(TL_channels_updatePinnedForumTopic) returns (Updates) {}
    rpc channels_deleteTopicHistory(TL_channels_deleteTopicHistory) returns (messages_AffectedHistory) {}
    rpc channels_reorderPinnedForumTopics(TL_channels_reorderPinnedForumTopics) returns (Updates) {}
    rpc channels_toggleViewForumAsMessages(TL_channels_toggleViewForumAsMessages) returns (Updates) {}
}

service RPCFragment {
    rpc account_reorderUsernames(TL_account_reorderUsernames) returns (Bool) {}
    rpc account_toggleUsername(TL_account_toggleUsername) returns (Bool) {}
    rpc channels_reorderUsernames(TL_channels_reorderUsernames) returns (Bool) {}
    rpc channels_toggleUsername(TL_channels_toggleUsername) returns (Bool) {}
    rpc channels_deactivateAllUsernames(TL_channels_deactivateAllUsernames) returns (Bool) {}
    rpc bots_reorderUsernames(TL_bots_reorderUsernames) returns (Bool) {}
    rpc bots_toggleUsername(TL_bots_toggleUsername) returns (Bool) {}
}

service RPCFragmentCollectibles {
    rpc fragment_getCollectibleInfo(TL_fragment_getCollectibleInfo) returns (fragment_CollectibleInfo) {}
}

service RPCGames {
    rpc messages_setGameScore(TL_messages_setGameScore) returns (Updates) {}
    rpc messages_setInlineGameScore(TL_messages_setInlineGameScore) returns (Bool) {}
    rpc messages_getGameHighScores(TL_messages_getGameHighScores) returns (messages_HighScores) {}
    rpc messages_getInlineGameHighScores(TL_messages_getInlineGameHighScores) returns (messages_HighScores) {}
}

service RPCGifs {
    rpc messages_getSavedGifs(TL_messages_getSavedGifs) returns (messages_SavedGifs) {}
    rpc messages_saveGif(TL_messages_saveGif) returns (Bool) {}
}

service RPCGiftCodes {
    rpc payments_checkGiftCode(TL_payments_checkGiftCode) returns (payments_CheckedGiftCode) {}
    rpc payments_applyGiftCode(TL_payments_applyGiftCode) returns (Updates) {}
}

service RPCGifts {
    rpc payments_getStarGifts(TL_payments_getStarGifts) returns (payments_StarGifts) {}
    rpc payments_saveStarGift(TL_payments_saveStarGift) returns (Bool) {}
    rpc payments_convertStarGift(TL_payments_convertStarGift) returns (Bool) {}
    rpc payments_getStarGiftUpgradePreview(TL_payments_getStarGiftUpgradePreview) returns (payments_StarGiftUpgradePreview) {}
    rpc payments_upgradeStarGift(TL_payments_upgradeStarGift) returns (Updates) {}
    rpc payments_transferStarGift(TL_payments_transferStarGift) returns (Updates) {}
    rpc payments_getUniqueStarGift(TL_payments_getUniqueStarGift) returns (payments_UniqueStarGift) {}
    rpc payments_getSavedStarGifts(TL_payments_getSavedStarGifts) returns (payments_SavedStarGifts) {}
    rpc payments_getSavedStarGift(TL_payments_getSavedStarGift) returns (payments_SavedStarGifts) {}
    rpc payments_getStarGiftWithdrawalUrl(TL_payments_getStarGiftWithdrawalUrl) returns (payments_StarGiftWithdrawalUrl) {}
    rpc payments_toggleChatStarGiftNotifications(TL_payments_toggleChatStarGiftNotifications) returns (Bool) {}
    rpc payments_toggleStarGiftsPinnedToTop(TL_payments_toggleStarGiftsPinnedToTop) returns (Bool) {}
    rpc payments_getUserStarGifts(TL_payments_getUserStarGifts) returns (payments_UserStarGifts) {}
    rpc payments_getUserStarGift(TL_payments_getUserStarGift) returns (payments_UserStarGifts) {}
}

service RPCGiveaways {
    rpc payments_getPremiumGiftCodeOptions(TL_payments_getPremiumGiftCodeOptions) returns (Vector_PremiumGiftCodeOption) {}
    rpc payments_getGiveawayInfo(TL_payments_getGiveawayInfo) returns (payments_GiveawayInfo) {}
    rpc payments_launchPrepaidGiveaway(TL_payments_launchPrepaidGiveaway) returns (Updates) {}
    rpc payments_getStarsGiveawayOptions(TL_payments_getStarsGiveawayOptions) returns (Vector_StarsGiveawayOption) {}
}

service RPCGroupCalls {
    rpc phone_createGroupCall(TL_phone_createGroupCall) returns (Updates) {}
    rpc phone_joinGroupCall(TL_phone_joinGroupCall) returns (Updates) {}
    rpc phone_leaveGroupCall(TL_phone_leaveGroupCall) returns (Updates) {}
    rpc phone_inviteToGroupCall(TL_phone_inviteToGroupCall) returns (Updates) {}
    rpc phone_discardGroupCall(TL_phone_discardGroupCall) returns (Updates) {}
    rpc phone_toggleGroupCallSettings(TL_phone_toggleGroupCallSettings) returns (Updates) {}
    rpc phone_getGroupCall(TL_phone_getGroupCall) returns (phone_GroupCall) {}
    rpc phone_getGroupParticipants(TL_phone_getGroupParticipants) returns (phone_GroupParticipants) {}
    rpc phone_checkGroupCall(TL_phone_checkGroupCall) returns (Vector_Int) {}
    rpc phone_toggleGroupCallRecord(TL_phone_toggleGroupCallRecord) returns (Updates) {}
    rpc phone_editGroupCallParticipant(TL_phone_editGroupCallParticipant) returns (Updates) {}
    rpc phone_editGroupCallTitle(TL_phone_editGroupCallTitle) returns (Updates) {}
    rpc phone_getGroupCallJoinAs(TL_phone_getGroupCallJoinAs) returns (phone_JoinAsPeers) {}
    rpc phone_exportGroupCallInvite(TL_phone_exportGroupCallInvite) returns (phone_ExportedGroupCallInvite) {}
    rpc phone_toggleGroupCallStartSubscription(TL_phone_toggleGroupCallStartSubscription) returns (Updates) {}
    rpc phone_startScheduledGroupCall(TL_phone_startScheduledGroupCall) returns (Updates) {}
    rpc phone_saveDefaultGroupCallJoinAs(TL_phone_saveDefaultGroupCallJoinAs) returns (Bool) {}
    rpc phone_joinGroupCallPresentation(TL_phone_joinGroupCallPresentation) returns (Updates) {}
    rpc phone_leaveGroupCallPresentation(TL_phone_leaveGroupCallPresentation) returns (Updates) {}
    rpc phone_getGroupCallStreamChannels(TL_phone_getGroupCallStreamChannels) returns (phone_GroupCallStreamChannels) {}
    rpc phone_getGroupCallStreamRtmpUrl(TL_phone_getGroupCallStreamRtmpUrl) returns (phone_GroupCallStreamRtmpUrl) {}
}

service RPCImportedChats {
    rpc messages_checkHistoryImport(TL_messages_checkHistoryImport) returns (messages_HistoryImportParsed) {}
    rpc messages_initHistoryImport(TL_messages_initHistoryImport) returns (messages_HistoryImport) {}
    rpc messages_uploadImportedMedia(TL_messages_uploadImportedMedia) returns (MessageMedia) {}
    rpc messages_startHistoryImport(TL_messages_startHistoryImport) returns (Bool) {}
    rpc messages_checkHistoryImportPeer(TL_messages_checkHistoryImportPeer) returns (messages_CheckedHistoryImportPeer) {}
}

service RPCInlineBot {
    rpc messages_getInlineBotResults(TL_messages_getInlineBotResults) returns (messages_BotResults) {}
    rpc messages_setInlineBotResults(TL_messages_setInlineBotResults) returns (Bool) {}
    rpc messages_sendInlineBotResult(TL_messages_sendInlineBotResult) returns (Updates) {}
    rpc messages_editInlineBotMessage(TL_messages_editInlineBotMessage) returns (Bool) {}
    rpc messages_getBotCallbackAnswer(TL_messages_getBotCallbackAnswer) returns (messages_BotCallbackAnswer) {}
    rpc messages_setBotCallbackAnswer(TL_messages_setBotCallbackAnswer) returns (Bool) {}
    rpc messages_sendBotRequestedPeer(TL_messages_sendBotRequestedPeer) returns (Updates) {}
}

service RPCInternalBot {
    rpc help_setBotUpdatesStatus(TL_help_setBotUpdatesStatus) returns (Bool) {}
    rpc bots_sendCustomRequest(TL_bots_sendCustomRequest) returns (DataJSON) {}
    rpc bots_answerWebhookJSONQuery(TL_bots_answerWebhookJSONQuery) returns (Bool) {}
}

service RPCLangpack {
    rpc langpack_getLangPack(TL_langpack_getLangPack) returns (LangPackDifference) {}
    rpc langpack_getStrings(TL_langpack_getStrings) returns (Vector_LangPackString) {}
    rpc langpack_getDifference(TL_langpack_getDifference) returns (LangPackDifference) {}
    rpc langpack_getLanguages(TL_langpack_getLanguages) returns (Vector_LangPackLanguage) {}
    rpc langpack_getLanguage(TL_langpack_getLanguage) returns (LangPackLanguage) {}
}

service RPCMainMiniBotApps {
    rpc messages_requestMainWebView(TL_messages_requestMainWebView) returns (WebViewResult) {}
    rpc bots_getPopularAppBots(TL_bots_getPopularAppBots) returns (bots_PopularAppBots) {}
    rpc bots_addPreviewMedia(TL_bots_addPreviewMedia) returns (BotPreviewMedia) {}
    rpc bots_editPreviewMedia(TL_bots_editPreviewMedia) returns (BotPreviewMedia) {}
    rpc bots_deletePreviewMedia(TL_bots_deletePreviewMedia) returns (Bool) {}
    rpc bots_reorderPreviewMedias(TL_bots_reorderPreviewMedias) returns (Bool) {}
    rpc bots_getPreviewInfo(TL_bots_getPreviewInfo) returns (bots_PreviewInfo) {}
    rpc bots_getPreviewMedias(TL_bots_getPreviewMedias) returns (Vector_BotPreviewMedia) {}
}

service RPCMessageEffects {
    rpc messages_getAvailableEffects(TL_messages_getAvailableEffects) returns (messages_AvailableEffects) {}
}

service RPCMessageThreads {
    rpc contacts_blockFromReplies(TL_contacts_blockFromReplies) returns (Updates) {}
    rpc messages_getReplies(TL_messages_getReplies) returns (messages_Messages) {}
    rpc messages_getDiscussionMessage(TL_messages_getDiscussionMessage) returns (messages_DiscussionMessage) {}
    rpc messages_readDiscussion(TL_messages_readDiscussion) returns (Bool) {}
}

service RPCMessages {
    rpc messages_getMessages(TL_messages_getMessages) returns (messages_Messages) {}
    rpc messages_getHistory(TL_messages_getHistory) returns (messages_Messages) {}
    rpc messages_search(TL_messages_search) returns (messages_Messages) {}
    rpc messages_readHistory(TL_messages_readHistory) returns (messages_AffectedMessages) {}
    rpc messages_deleteHistory(TL_messages_deleteHistory) returns (messages_AffectedHistory) {}
    rpc messages_deleteMessages(TL_messages_deleteMessages) returns (messages_AffectedMessages) {}
    rpc messages_receivedMessages(TL_messages_receivedMessages) returns (Vector_ReceivedNotifyMessage) {}
    rpc messages_sendMessage(TL_messages_sendMessage) returns (Updates) {}
    rpc messages_sendMedia(TL_messages_sendMedia) returns (Updates) {}
    rpc messages_forwardMessages(TL_messages_forwardMessages) returns (Updates) {}
    rpc messages_readMessageContents(TL_messages_readMessageContents) returns (messages_AffectedMessages) {}
    rpc messages_getMessagesViews(TL_messages_getMessagesViews) returns (messages_MessageViews) {}
    rpc messages_searchGlobal(TL_messages_searchGlobal) returns (messages_Messages) {}
    rpc messages_getMessageEditData(TL_messages_getMessageEditData) returns (messages_MessageEditData) {}
    rpc messages_editMessage(TL_messages_editMessage) returns (Updates) {}
    rpc messages_getUnreadMentions(TL_messages_getUnreadMentions) returns (messages_Messages) {}
    rpc messages_readMentions(TL_messages_readMentions) returns (messages_AffectedHistory) {}
    rpc messages_getRecentLocations(TL_messages_getRecentLocations) returns (messages_Messages) {}
    rpc messages_sendMultiMedia(TL_messages_sendMultiMedia) returns (Updates) {}
    rpc messages_updatePinnedMessage(TL_messages_updatePinnedMessage) returns (Updates) {}
    rpc messages_getSearchCounters(TL_messages_getSearchCounters) returns (Vector_Messages_SearchCounter) {}
    rpc messages_unpinAllMessages(TL_messages_unpinAllMessages) returns (messages_AffectedHistory) {}
    rpc messages_getSearchResultsCalendar(TL_messages_getSearchResultsCalendar) returns (messages_SearchResultsCalendar) {}
    rpc messages_getSearchResultsPositions(TL_messages_getSearchResultsPositions) returns (messages_SearchResultsPositions) {}
    rpc messages_toggleNoForwards(TL_messages_toggleNoForwards) returns (Updates) {}
    rpc messages_saveDefaultSendAs(TL_messages_saveDefaultSendAs) returns (Bool) {}
    rpc messages_searchSentMedia(TL_messages_searchSentMedia) returns (messages_Messages) {}
    rpc messages_getOutboxReadDate(TL_messages_getOutboxReadDate) returns (OutboxReadDate) {}
    rpc messages_reportMessagesDelivery(TL_messages_reportMessagesDelivery) returns (Bool) {}
    rpc channels_getSendAs(TL_channels_getSendAs) returns (channels_SendAsPeers) {}
    rpc channels_searchPosts(TL_channels_searchPosts) returns (messages_Messages) {}
}

service RPCMiniBotApps {
    rpc messages_requestWebView(TL_messages_requestWebView) returns (WebViewResult) {}
    rpc messages_prolongWebView(TL_messages_prolongWebView) returns (Bool) {}
    rpc messages_requestSimpleWebView413A3E73(TL_messages_requestSimpleWebView413A3E73) returns (WebViewResult) {}
    rpc messages_sendWebViewResultMessage(TL_messages_sendWebViewResultMessage) returns (WebViewMessageSent) {}
    rpc messages_sendWebViewData(TL_messages_sendWebViewData) returns (Updates) {}
    rpc messages_getBotApp(TL_messages_getBotApp) returns (messages_BotApp) {}
    rpc messages_requestAppWebView53618BCE(TL_messages_requestAppWebView53618BCE) returns (WebViewResult) {}
    rpc bots_canSendMessage(TL_bots_canSendMessage) returns (Bool) {}
    rpc bots_allowSendMessage(TL_bots_allowSendMessage) returns (Updates) {}
    rpc bots_invokeWebViewCustomMethod(TL_bots_invokeWebViewCustomMethod) returns (DataJSON) {}
    rpc bots_checkDownloadFileParams(TL_bots_checkDownloadFileParams) returns (Bool) {}
    rpc messages_requestSimpleWebView1A46500A(TL_messages_requestSimpleWebView1A46500A) returns (SimpleWebViewResult) {}
    rpc messages_requestAppWebView8C5A3B3C(TL_messages_requestAppWebView8C5A3B3C) returns (AppWebViewResult) {}
    rpc messages_requestSimpleWebView299BEC8E(TL_messages_requestSimpleWebView299BEC8E) returns (SimpleWebViewResult) {}
    rpc messages_requestSimpleWebView6ABB2F73(TL_messages_requestSimpleWebView6ABB2F73) returns (SimpleWebViewResult) {}
}

service RPCMiscellaneous {
    rpc help_saveAppLog(TL_help_saveAppLog) returns (Bool) {}
    rpc help_test(TL_help_test) returns (Bool) {}
}

service RPCNotification {
    rpc account_registerDevice(TL_account_registerDevice) returns (Bool) {}
    rpc account_unregisterDevice(TL_account_unregisterDevice) returns (Bool) {}
    rpc account_updateNotifySettings(TL_account_updateNotifySettings) returns (Bool) {}
    rpc account_getNotifySettings(TL_account_getNotifySettings) returns (PeerNotifySettings) {}
    rpc account_resetNotifySettings(TL_account_resetNotifySettings) returns (Bool) {}
    rpc account_updateDeviceLocked(TL_account_updateDeviceLocked) returns (Bool) {}
    rpc account_getNotifyExceptions(TL_account_getNotifyExceptions) returns (Updates) {}
}

service RPCNsfw {
    rpc account_setContentSettings(TL_account_setContentSettings) returns (Bool) {}
    rpc account_getContentSettings(TL_account_getContentSettings) returns (account_ContentSettings) {}
}

service RPCPaidMedia {
    rpc messages_getExtendedMedia(TL_messages_getExtendedMedia) returns (Updates) {}
}

service RPCPaidMessage {
    rpc account_addNoPaidMessagesException(TL_account_addNoPaidMessagesException) returns (Bool) {}
    rpc account_getPaidMessagesRevenue(TL_account_getPaidMessagesRevenue) returns (account_PaidMessagesRevenue) {}
    rpc channels_updatePaidMessagesPrice(TL_channels_updatePaidMessagesPrice) returns (Updates) {}
}

service RPCPassport {
    rpc account_getAuthorizations(TL_account_getAuthorizations) returns (account_Authorizations) {}
    rpc account_getAllSecureValues(TL_account_getAllSecureValues) returns (Vector_SecureValue) {}
    rpc account_getSecureValue(TL_account_getSecureValue) returns (Vector_SecureValue) {}
    rpc account_saveSecureValue(TL_account_saveSecureValue) returns (SecureValue) {}
    rpc account_deleteSecureValue(TL_account_deleteSecureValue) returns (Bool) {}
    rpc account_getAuthorizationForm(TL_account_getAuthorizationForm) returns (account_AuthorizationForm) {}
    rpc account_acceptAuthorization(TL_account_acceptAuthorization) returns (Bool) {}
    rpc account_sendVerifyPhoneCode(TL_account_sendVerifyPhoneCode) returns (auth_SentCode) {}
    rpc account_verifyPhone(TL_account_verifyPhone) returns (Bool) {}
    rpc users_setSecureValueErrors(TL_users_setSecureValueErrors) returns (Bool) {}
    rpc help_getPassportConfig(TL_help_getPassportConfig) returns (help_PassportConfig) {}
}

service RPCPayments {
    rpc account_getTmpPassword(TL_account_getTmpPassword) returns (account_TmpPassword) {}
    rpc messages_setBotShippingResults(TL_messages_setBotShippingResults) returns (Bool) {}
    rpc messages_setBotPrecheckoutResults(TL_messages_setBotPrecheckoutResults) returns (Bool) {}
    rpc payments_getPaymentForm(TL_payments_getPaymentForm) returns (payments_PaymentForm) {}
    rpc payments_getPaymentReceipt(TL_payments_getPaymentReceipt) returns (payments_PaymentReceipt) {}
    rpc payments_validateRequestedInfo(TL_payments_validateRequestedInfo) returns (payments_ValidatedRequestedInfo) {}
    rpc payments_sendPaymentForm(TL_payments_sendPaymentForm) returns (payments_PaymentResult) {}
    rpc payments_getSavedInfo(TL_payments_getSavedInfo) returns (payments_SavedInfo) {}
    rpc payments_clearSavedInfo(TL_payments_clearSavedInfo) returns (Bool) {}
    rpc payments_getBankCardData(TL_payments_getBankCardData) returns (payments_BankCardData) {}
    rpc payments_exportInvoice(TL_payments_exportInvoice) returns (payments_ExportedInvoice) {}
    rpc payments_requestRecurringPayment(TL_payments_requestRecurringPayment) returns (Updates) {}
    rpc payments_restorePlayMarketReceipt(TL_payments_restorePlayMarketReceipt) returns (Updates) {}
}

service RPCPolls {
    rpc messages_sendVote(TL_messages_sendVote) returns (Updates) {}
    rpc messages_getPollResults(TL_messages_getPollResults) returns (Updates) {}
    rpc messages_getPollVotes(TL_messages_getPollVotes) returns (messages_VotesList) {}
}

service RPCPredefined {
    rpc predefined_createPredefinedUser(TL_predefined_createPredefinedUser) returns (PredefinedUser) {}
    rpc predefined_updatePredefinedUsername(TL_predefined_updatePredefinedUsername) returns (PredefinedUser) {}
    rpc predefined_updatePredefinedProfile(TL_predefined_updatePredefinedProfile) returns (PredefinedUser) {}
    rpc predefined_updatePredefinedVerified(TL_predefined_updatePredefinedVerified) returns (PredefinedUser) {}
    rpc predefined_updatePredefinedCode(TL_predefined_updatePredefinedCode) returns (PredefinedUser) {}
    rpc predefined_getPredefinedUser(TL_predefined_getPredefinedUser) returns (PredefinedUser) {}
    rpc predefined_getPredefinedUsers(TL_predefined_getPredefinedUsers) returns (Vector_PredefinedUser) {}
}

service RPCPremium {
    rpc help_getPremiumPromo(TL_help_getPremiumPromo) returns (help_PremiumPromo) {}
    rpc payments_assignAppStoreTransaction(TL_payments_assignAppStoreTransaction) returns (Updates) {}
    rpc payments_assignPlayMarketTransaction(TL_payments_assignPlayMarketTransaction) returns (Updates) {}
    rpc payments_canPurchaseStore(TL_payments_canPurchaseStore) returns (Bool) {}
    rpc payments_canPurchasePremium(TL_payments_canPurchasePremium) returns (Bool) {}
}

service RPCPreparedInlineMessages {
    rpc messages_savePreparedInlineMessage(TL_messages_savePreparedInlineMessage) returns (messages_BotPreparedInlineMessage) {}
    rpc messages_getPreparedInlineMessage(TL_messages_getPreparedInlineMessage) returns (messages_PreparedInlineMessage) {}
}

service RPCPrivacySettings {
    rpc account_getPrivacy(TL_account_getPrivacy) returns (account_PrivacyRules) {}
    rpc account_setPrivacy(TL_account_setPrivacy) returns (account_PrivacyRules) {}
    rpc account_getGlobalPrivacySettings(TL_account_getGlobalPrivacySettings) returns (GlobalPrivacySettings) {}
    rpc account_setGlobalPrivacySettings(TL_account_setGlobalPrivacySettings) returns (GlobalPrivacySettings) {}
    rpc users_getRequirementsToContact(TL_users_getRequirementsToContact) returns (Vector_RequirementToContact) {}
    rpc messages_setDefaultHistoryTTL(TL_messages_setDefaultHistoryTTL) returns (Bool) {}
    rpc messages_getDefaultHistoryTTL(TL_messages_getDefaultHistoryTTL) returns (DefaultHistoryTTL) {}
    rpc users_getIsPremiumRequiredToContact(TL_users_getIsPremiumRequiredToContact) returns (Vector_Bool) {}
}

service RPCProfileLinks {
    rpc contacts_exportContactToken(TL_contacts_exportContactToken) returns (ExportedContactToken) {}
    rpc contacts_importContactToken(TL_contacts_importContactToken) returns (User) {}
}

service RPCPromoData {
    rpc help_getPromoData(TL_help_getPromoData) returns (help_PromoData) {}
    rpc help_hidePromoData(TL_help_hidePromoData) returns (Bool) {}
}

service RPCQrCode {
    rpc auth_exportLoginToken(TL_auth_exportLoginToken) returns (auth_LoginToken) {}
    rpc auth_importLoginToken(TL_auth_importLoginToken) returns (auth_LoginToken) {}
    rpc auth_acceptLoginToken(TL_auth_acceptLoginToken) returns (Authorization) {}
}

service RPCReactionNotification {
    rpc account_getReactionsNotifySettings(TL_account_getReactionsNotifySettings) returns (ReactionsNotifySettings) {}
    rpc account_setReactionsNotifySettings(TL_account_setReactionsNotifySettings) returns (ReactionsNotifySettings) {}
}

service RPCReactions {
    rpc messages_sendReaction(TL_messages_sendReaction) returns (Updates) {}
    rpc messages_getMessagesReactions(TL_messages_getMessagesReactions) returns (Updates) {}
    rpc messages_getMessageReactionsList(TL_messages_getMessageReactionsList) returns (messages_MessageReactionsList) {}
    rpc messages_setChatAvailableReactions(TL_messages_setChatAvailableReactions) returns (Updates) {}
    rpc messages_getAvailableReactions(TL_messages_getAvailableReactions) returns (messages_AvailableReactions) {}
    rpc messages_setDefaultReaction(TL_messages_setDefaultReaction) returns (Bool) {}
    rpc messages_getUnreadReactions(TL_messages_getUnreadReactions) returns (messages_Messages) {}
    rpc messages_readReactions(TL_messages_readReactions) returns (messages_AffectedHistory) {}
    rpc messages_reportReaction(TL_messages_reportReaction) returns (Bool) {}
    rpc messages_getTopReactions(TL_messages_getTopReactions) returns (messages_Reactions) {}
    rpc messages_getRecentReactions(TL_messages_getRecentReactions) returns (messages_Reactions) {}
    rpc messages_clearRecentReactions(TL_messages_clearRecentReactions) returns (Bool) {}
    rpc messages_sendPaidReaction(TL_messages_sendPaidReaction) returns (Updates) {}
    rpc messages_togglePaidReactionPrivacy(TL_messages_togglePaidReactionPrivacy) returns (Bool) {}
    rpc messages_getPaidReactionPrivacy(TL_messages_getPaidReactionPrivacy) returns (Updates) {}
}

service RPCReports {
    rpc account_reportPeer(TL_account_reportPeer) returns (Bool) {}
    rpc account_reportProfilePhoto(TL_account_reportProfilePhoto) returns (Bool) {}
    rpc messages_reportSpam(TL_messages_reportSpam) returns (Bool) {}
    rpc messages_reportFC78AF9B(TL_messages_reportFC78AF9B) returns (ReportResult) {}
    rpc messages_reportEncryptedSpam(TL_messages_reportEncryptedSpam) returns (Bool) {}
    rpc channels_reportSpam(TL_channels_reportSpam) returns (Bool) {}
    rpc messages_report8953AB4E(TL_messages_report8953AB4E) returns (Bool) {}
}

service RPCRingtone {
    rpc account_getSavedRingtones(TL_account_getSavedRingtones) returns (account_SavedRingtones) {}
    rpc account_saveRingtone(TL_account_saveRingtone) returns (account_SavedRingtone) {}
    rpc account_uploadRingtone(TL_account_uploadRingtone) returns (Document) {}
}

service RPCSavedMessageDialogs {
    rpc messages_getSavedDialogs(TL_messages_getSavedDialogs) returns (messages_SavedDialogs) {}
    rpc messages_getSavedHistory(TL_messages_getSavedHistory) returns (messages_Messages) {}
    rpc messages_deleteSavedHistory(TL_messages_deleteSavedHistory) returns (messages_AffectedHistory) {}
    rpc messages_getPinnedSavedDialogs(TL_messages_getPinnedSavedDialogs) returns (messages_SavedDialogs) {}
    rpc messages_toggleSavedDialogPin(TL_messages_toggleSavedDialogPin) returns (Bool) {}
    rpc messages_reorderPinnedSavedDialogs(TL_messages_reorderPinnedSavedDialogs) returns (Bool) {}
}

service RPCSavedMessageTags {
    rpc messages_getSavedReactionTags(TL_messages_getSavedReactionTags) returns (messages_SavedReactionTags) {}
    rpc messages_updateSavedReactionTag(TL_messages_updateSavedReactionTag) returns (Bool) {}
    rpc messages_getDefaultTagReactions(TL_messages_getDefaultTagReactions) returns (messages_Reactions) {}
}

service RPCScheduledMessages {
    rpc messages_getScheduledHistory(TL_messages_getScheduledHistory) returns (messages_Messages) {}
    rpc messages_getScheduledMessages(TL_messages_getScheduledMessages) returns (messages_Messages) {}
    rpc messages_sendScheduledMessages(TL_messages_sendScheduledMessages) returns (Updates) {}
    rpc messages_deleteScheduledMessages(TL_messages_deleteScheduledMessages) returns (Updates) {}
}

service RPCSeamless {
    rpc account_getWebAuthorizations(TL_account_getWebAuthorizations) returns (account_WebAuthorizations) {}
    rpc account_resetWebAuthorization(TL_account_resetWebAuthorization) returns (Bool) {}
    rpc account_resetWebAuthorizations(TL_account_resetWebAuthorizations) returns (Bool) {}
    rpc messages_requestUrlAuth(TL_messages_requestUrlAuth) returns (UrlAuthResult) {}
    rpc messages_acceptUrlAuth(TL_messages_acceptUrlAuth) returns (UrlAuthResult) {}
}

service RPCSecretChats {
    rpc messages_getDhConfig(TL_messages_getDhConfig) returns (messages_DhConfig) {}
    rpc messages_requestEncryption(TL_messages_requestEncryption) returns (EncryptedChat) {}
    rpc messages_acceptEncryption(TL_messages_acceptEncryption) returns (EncryptedChat) {}
    rpc messages_discardEncryption(TL_messages_discardEncryption) returns (Bool) {}
    rpc messages_setEncryptedTyping(TL_messages_setEncryptedTyping) returns (Bool) {}
    rpc messages_readEncryptedHistory(TL_messages_readEncryptedHistory) returns (Bool) {}
    rpc messages_sendEncrypted(TL_messages_sendEncrypted) returns (messages_SentEncryptedMessage) {}
    rpc messages_sendEncryptedFile(TL_messages_sendEncryptedFile) returns (messages_SentEncryptedMessage) {}
    rpc messages_sendEncryptedService(TL_messages_sendEncryptedService) returns (messages_SentEncryptedMessage) {}
    rpc messages_receivedQueue(TL_messages_receivedQueue) returns (Vector_Long) {}
}

service RPCSmsjobs {
    rpc smsjobs_isEligibleToJoin(TL_smsjobs_isEligibleToJoin) returns (smsjobs_EligibilityToJoin) {}
    rpc smsjobs_join(TL_smsjobs_join) returns (Bool) {}
    rpc smsjobs_leave(TL_smsjobs_leave) returns (Bool) {}
    rpc smsjobs_updateSettings(TL_smsjobs_updateSettings) returns (Bool) {}
    rpc smsjobs_getStatus(TL_smsjobs_getStatus) returns (smsjobs_Status) {}
    rpc smsjobs_getSmsJob(TL_smsjobs_getSmsJob) returns (SmsJob) {}
    rpc smsjobs_finishJob(TL_smsjobs_finishJob) returns (Bool) {}
}

service RPCSponsoredMessages {
    rpc account_toggleSponsoredMessages(TL_account_toggleSponsoredMessages) returns (Bool) {}
    rpc contacts_getSponsoredPeers(TL_contacts_getSponsoredPeers) returns (contacts_SponsoredPeers) {}
    rpc messages_viewSponsoredMessage(TL_messages_viewSponsoredMessage) returns (Bool) {}
    rpc messages_clickSponsoredMessage(TL_messages_clickSponsoredMessage) returns (Bool) {}
    rpc messages_reportSponsoredMessage(TL_messages_reportSponsoredMessage) returns (channels_SponsoredMessageReportResult) {}
    rpc messages_getSponsoredMessages(TL_messages_getSponsoredMessages) returns (messages_SponsoredMessages) {}
    rpc channels_restrictSponsoredMessages(TL_channels_restrictSponsoredMessages) returns (Updates) {}
    rpc channels_viewSponsoredMessage(TL_channels_viewSponsoredMessage) returns (Bool) {}
    rpc channels_getSponsoredMessages(TL_channels_getSponsoredMessages) returns (messages_SponsoredMessages) {}
    rpc channels_clickSponsoredMessage(TL_channels_clickSponsoredMessage) returns (Bool) {}
    rpc channels_reportSponsoredMessage(TL_channels_reportSponsoredMessage) returns (channels_SponsoredMessageReportResult) {}
}

service RPCStarSubscriptions {
    rpc payments_getStarsSubscriptions(TL_payments_getStarsSubscriptions) returns (payments_StarsStatus) {}
    rpc payments_changeStarsSubscription(TL_payments_changeStarsSubscription) returns (Bool) {}
    rpc payments_fulfillStarsSubscription(TL_payments_fulfillStarsSubscription) returns (Bool) {}
    rpc payments_botCancelStarsSubscription(TL_payments_botCancelStarsSubscription) returns (Bool) {}
}

service RPCStars {
    rpc payments_getStarsTopupOptions(TL_payments_getStarsTopupOptions) returns (Vector_StarsTopupOption) {}
    rpc payments_getStarsStatus(TL_payments_getStarsStatus) returns (payments_StarsStatus) {}
    rpc payments_getStarsTransactions(TL_payments_getStarsTransactions) returns (payments_StarsStatus) {}
    rpc payments_sendStarsForm(TL_payments_sendStarsForm) returns (payments_PaymentResult) {}
    rpc payments_refundStarsCharge(TL_payments_refundStarsCharge) returns (Updates) {}
    rpc payments_getStarsRevenueStats(TL_payments_getStarsRevenueStats) returns (payments_StarsRevenueStats) {}
    rpc payments_getStarsRevenueWithdrawalUrl(TL_payments_getStarsRevenueWithdrawalUrl) returns (payments_StarsRevenueWithdrawalUrl) {}
    rpc payments_getStarsRevenueAdsAccountUrl(TL_payments_getStarsRevenueAdsAccountUrl) returns (payments_StarsRevenueAdsAccountUrl) {}
    rpc payments_getStarsTransactionsByID(TL_payments_getStarsTransactionsByID) returns (payments_StarsStatus) {}
    rpc payments_getStarsGiftOptions(TL_payments_getStarsGiftOptions) returns (Vector_StarsGiftOption) {}
}

service RPCStatistics {
    rpc stats_getBroadcastStats(TL_stats_getBroadcastStats) returns (stats_BroadcastStats) {}
    rpc stats_loadAsyncGraph(TL_stats_loadAsyncGraph) returns (StatsGraph) {}
    rpc stats_getMegagroupStats(TL_stats_getMegagroupStats) returns (stats_MegagroupStats) {}
    rpc stats_getMessagePublicForwards5F150144(TL_stats_getMessagePublicForwards5F150144) returns (stats_PublicForwards) {}
    rpc stats_getMessageStats(TL_stats_getMessageStats) returns (stats_MessageStats) {}
    rpc stats_getStoryStats(TL_stats_getStoryStats) returns (stats_StoryStats) {}
    rpc stats_getStoryPublicForwards(TL_stats_getStoryPublicForwards) returns (stats_PublicForwards) {}
    rpc stats_getMessagePublicForwards5630281B(TL_stats_getMessagePublicForwards5630281B) returns (messages_Messages) {}
}

service RPCStickers {
    rpc messages_getStickers(TL_messages_getStickers) returns (messages_Stickers) {}
    rpc messages_getAllStickers(TL_messages_getAllStickers) returns (messages_AllStickers) {}
    rpc messages_getStickerSet(TL_messages_getStickerSet) returns (messages_StickerSet) {}
    rpc messages_installStickerSet(TL_messages_installStickerSet) returns (messages_StickerSetInstallResult) {}
    rpc messages_uninstallStickerSet(TL_messages_uninstallStickerSet) returns (Bool) {}
    rpc messages_reorderStickerSets(TL_messages_reorderStickerSets) returns (Bool) {}
    rpc messages_getFeaturedStickers(TL_messages_getFeaturedStickers) returns (messages_FeaturedStickers) {}
    rpc messages_readFeaturedStickers(TL_messages_readFeaturedStickers) returns (Bool) {}
    rpc messages_getRecentStickers(TL_messages_getRecentStickers) returns (messages_RecentStickers) {}
    rpc messages_saveRecentSticker(TL_messages_saveRecentSticker) returns (Bool) {}
    rpc messages_clearRecentStickers(TL_messages_clearRecentStickers) returns (Bool) {}
    rpc messages_getArchivedStickers(TL_messages_getArchivedStickers) returns (messages_ArchivedStickers) {}
    rpc messages_getMaskStickers(TL_messages_getMaskStickers) returns (messages_AllStickers) {}
    rpc messages_getAttachedStickers(TL_messages_getAttachedStickers) returns (Vector_StickerSetCovered) {}
    rpc messages_getFavedStickers(TL_messages_getFavedStickers) returns (messages_FavedStickers) {}
    rpc messages_faveSticker(TL_messages_faveSticker) returns (Bool) {}
    rpc messages_searchStickerSets(TL_messages_searchStickerSets) returns (messages_FoundStickerSets) {}
    rpc messages_toggleStickerSets(TL_messages_toggleStickerSets) returns (Bool) {}
    rpc messages_getOldFeaturedStickers(TL_messages_getOldFeaturedStickers) returns (messages_FeaturedStickers) {}
    rpc messages_searchEmojiStickerSets(TL_messages_searchEmojiStickerSets) returns (messages_FoundStickerSets) {}
    rpc messages_getMyStickers(TL_messages_getMyStickers) returns (messages_MyStickers) {}
    rpc messages_searchStickers(TL_messages_searchStickers) returns (messages_FoundStickers) {}
    rpc stickers_createStickerSet(TL_stickers_createStickerSet) returns (messages_StickerSet) {}
    rpc stickers_removeStickerFromSet(TL_stickers_removeStickerFromSet) returns (messages_StickerSet) {}
    rpc stickers_changeStickerPosition(TL_stickers_changeStickerPosition) returns (messages_StickerSet) {}
    rpc stickers_addStickerToSet(TL_stickers_addStickerToSet) returns (messages_StickerSet) {}
    rpc stickers_setStickerSetThumb(TL_stickers_setStickerSetThumb) returns (messages_StickerSet) {}
    rpc stickers_checkShortName(TL_stickers_checkShortName) returns (Bool) {}
    rpc stickers_suggestShortName(TL_stickers_suggestShortName) returns (stickers_SuggestedShortName) {}
    rpc stickers_changeSticker(TL_stickers_changeSticker) returns (messages_StickerSet) {}
    rpc stickers_renameStickerSet(TL_stickers_renameStickerSet) returns (messages_StickerSet) {}
    rpc stickers_deleteStickerSet(TL_stickers_deleteStickerSet) returns (Bool) {}
    rpc stickers_replaceSticker(TL_stickers_replaceSticker) returns (messages_StickerSet) {}
}

service RPCStories {
    rpc stories_canSendStory(TL_stories_canSendStory) returns (Bool) {}
    rpc stories_sendStory(TL_stories_sendStory) returns (Updates) {}
    rpc stories_editStory(TL_stories_editStory) returns (Updates) {}
    rpc stories_deleteStories(TL_stories_deleteStories) returns (Vector_Int) {}
    rpc stories_togglePinned(TL_stories_togglePinned) returns (Vector_Int) {}
    rpc stories_getAllStories(TL_stories_getAllStories) returns (stories_AllStories) {}
    rpc stories_getPinnedStories(TL_stories_getPinnedStories) returns (stories_Stories) {}
    rpc stories_getStoriesArchive(TL_stories_getStoriesArchive) returns (stories_Stories) {}
    rpc stories_getStoriesByID(TL_stories_getStoriesByID) returns (stories_Stories) {}
    rpc stories_toggleAllStoriesHidden(TL_stories_toggleAllStoriesHidden) returns (Bool) {}
    rpc stories_readStories(TL_stories_readStories) returns (Vector_Int) {}
    rpc stories_incrementStoryViews(TL_stories_incrementStoryViews) returns (Bool) {}
    rpc stories_getStoryViewsList(TL_stories_getStoryViewsList) returns (stories_StoryViewsList) {}
    rpc stories_getStoriesViews(TL_stories_getStoriesViews) returns (stories_StoryViews) {}
    rpc stories_exportStoryLink(TL_stories_exportStoryLink) returns (ExportedStoryLink) {}
    rpc stories_report19D8EB45(TL_stories_report19D8EB45) returns (ReportResult) {}
    rpc stories_activateStealthMode(TL_stories_activateStealthMode) returns (Updates) {}
    rpc stories_sendReaction(TL_stories_sendReaction) returns (Updates) {}
    rpc stories_getPeerStories(TL_stories_getPeerStories) returns (stories_PeerStories) {}
    rpc stories_getAllReadPeerStories(TL_stories_getAllReadPeerStories) returns (Updates) {}
    rpc stories_getPeerMaxIDs(TL_stories_getPeerMaxIDs) returns (Vector_Int) {}
    rpc stories_getChatsToSend(TL_stories_getChatsToSend) returns (messages_Chats) {}
    rpc stories_togglePeerStoriesHidden(TL_stories_togglePeerStoriesHidden) returns (Bool) {}
    rpc stories_getStoryReactionsList(TL_stories_getStoryReactionsList) returns (stories_StoryReactionsList) {}
    rpc stories_togglePinnedToTop(TL_stories_togglePinnedToTop) returns (Bool) {}
    rpc stories_searchPosts(TL_stories_searchPosts) returns (stories_FoundStories) {}
    rpc stories_report1923FA8C(TL_stories_report1923FA8C) returns (Bool) {}
    rpc users_getStoriesMaxIDs(TL_users_getStoriesMaxIDs) returns (Vector_Int) {}
    rpc contacts_toggleStoriesHidden(TL_contacts_toggleStoriesHidden) returns (Bool) {}
    rpc stories_getUserStories(TL_stories_getUserStories) returns (stories_UserStories) {}
    rpc stories_getAllReadUserStories(TL_stories_getAllReadUserStories) returns (Updates) {}
    rpc stories_reportC95BE06A(TL_stories_reportC95BE06A) returns (Bool) {}
}

service RPCTakeout {
    rpc account_initTakeoutSession(TL_account_initTakeoutSession) returns (account_Takeout) {}
    rpc account_finishTakeoutSession(TL_account_finishTakeoutSession) returns (Bool) {}
    rpc messages_getSplitRanges(TL_messages_getSplitRanges) returns (Vector_MessageRange) {}
    rpc channels_getLeftChannels(TL_channels_getLeftChannels) returns (messages_Chats) {}
}

service RPCThemes {
    rpc account_uploadTheme(TL_account_uploadTheme) returns (Document) {}
    rpc account_createTheme(TL_account_createTheme) returns (Theme) {}
    rpc account_updateTheme(TL_account_updateTheme) returns (Theme) {}
    rpc account_saveTheme(TL_account_saveTheme) returns (Bool) {}
    rpc account_installTheme(TL_account_installTheme) returns (Bool) {}
    rpc account_getTheme(TL_account_getTheme) returns (Theme) {}
    rpc account_getThemes(TL_account_getThemes) returns (account_Themes) {}
    rpc account_getChatThemes(TL_account_getChatThemes) returns (account_Themes) {}
    rpc messages_setChatTheme(TL_messages_setChatTheme) returns (Updates) {}
}

service RPCTimezones {
    rpc help_getTimezonesList(TL_help_getTimezonesList) returns (help_TimezonesList) {}
}

service RPCTos {
    rpc help_getTermsOfServiceUpdate(TL_help_getTermsOfServiceUpdate) returns (help_TermsOfServiceUpdate) {}
    rpc help_acceptTermsOfService(TL_help_acceptTermsOfService) returns (Bool) {}
}

service RPCTranscription {
    rpc messages_transcribeAudio(TL_messages_transcribeAudio) returns (messages_TranscribedAudio) {}
    rpc messages_rateTranscribedAudio(TL_messages_rateTranscribedAudio) returns (Bool) {}
}

service RPCTranslation {
    rpc messages_translateText(TL_messages_translateText) returns (messages_TranslatedText) {}
    rpc messages_togglePeerTranslations(TL_messages_togglePeerTranslations) returns (Bool) {}
}

service RPCTsf {
    rpc help_getUserInfo(TL_help_getUserInfo) returns (help_UserInfo) {}
    rpc help_editUserInfo(TL_help_editUserInfo) returns (help_UserInfo) {}
}

service RPCTwoFa {
    rpc account_getPassword(TL_account_getPassword) returns (account_Password) {}
    rpc account_getPasswordSettings(TL_account_getPasswordSettings) returns (account_PasswordSettings) {}
    rpc account_updatePasswordSettings(TL_account_updatePasswordSettings) returns (Bool) {}
    rpc account_confirmPasswordEmail(TL_account_confirmPasswordEmail) returns (Bool) {}
    rpc account_resendPasswordEmail(TL_account_resendPasswordEmail) returns (Bool) {}
    rpc account_cancelPasswordEmail(TL_account_cancelPasswordEmail) returns (Bool) {}
    rpc account_declinePasswordReset(TL_account_declinePasswordReset) returns (Bool) {}
}

service RPCUpdates {
    rpc updates_getState(TL_updates_getState) returns (updates_State) {}
    rpc updates_getDifference(TL_updates_getDifference) returns (updates_Difference) {}
    rpc updates_getChannelDifference(TL_updates_getChannelDifference) returns (updates_ChannelDifference) {}
}

service RPCUserProfile {
    rpc account_updateProfile(TL_account_updateProfile) returns (User) {}
    rpc account_updateStatus(TL_account_updateStatus) returns (Bool) {}
    rpc account_updateBirthday(TL_account_updateBirthday) returns (Bool) {}
    rpc account_updatePersonalChannel(TL_account_updatePersonalChannel) returns (Bool) {}
    rpc contacts_getBirthdays(TL_contacts_getBirthdays) returns (contacts_ContactBirthdays) {}
    rpc photos_updateProfilePhoto(TL_photos_updateProfilePhoto) returns (photos_Photo) {}
    rpc photos_uploadProfilePhoto(TL_photos_uploadProfilePhoto) returns (photos_Photo) {}
    rpc photos_deletePhotos(TL_photos_deletePhotos) returns (Vector_Long) {}
    rpc photos_getUserPhotos(TL_photos_getUserPhotos) returns (photos_Photos) {}
    rpc photos_uploadContactProfilePhoto(TL_photos_uploadContactProfilePhoto) returns (photos_Photo) {}
    rpc account_updateVerified(TL_account_updateVerified) returns (User) {}
}

service RPCUsernames {
    rpc account_checkUsername(TL_account_checkUsername) returns (Bool) {}
    rpc account_updateUsername(TL_account_updateUsername) returns (User) {}
    rpc contacts_resolveUsername(TL_contacts_resolveUsername) returns (contacts_ResolvedPeer) {}
    rpc channels_checkUsername(TL_channels_checkUsername) returns (Bool) {}
    rpc channels_updateUsername(TL_channels_updateUsername) returns (Bool) {}
}

service RPCUsers {
    rpc users_getUsers(TL_users_getUsers) returns (Vector_User) {}
    rpc users_getFullUser(TL_users_getFullUser) returns (users_UserFull) {}
    rpc contacts_resolvePhone(TL_contacts_resolvePhone) returns (contacts_ResolvedPeer) {}
    rpc users_getMe(TL_users_getMe) returns (User) {}
}

service RPCVoipCalls {
    rpc messages_deletePhoneCallHistory(TL_messages_deletePhoneCallHistory) returns (messages_AffectedFoundMessages) {}
    rpc phone_getCallConfig(TL_phone_getCallConfig) returns (DataJSON) {}
    rpc phone_requestCall(TL_phone_requestCall) returns (phone_PhoneCall) {}
    rpc phone_acceptCall(TL_phone_acceptCall) returns (phone_PhoneCall) {}
    rpc phone_confirmCall(TL_phone_confirmCall) returns (phone_PhoneCall) {}
    rpc phone_receivedCall(TL_phone_receivedCall) returns (Bool) {}
    rpc phone_discardCall(TL_phone_discardCall) returns (Updates) {}
    rpc phone_setCallRating(TL_phone_setCallRating) returns (Updates) {}
    rpc phone_saveCallDebug(TL_phone_saveCallDebug) returns (Bool) {}
    rpc phone_sendSignalingData(TL_phone_sendSignalingData) returns (Bool) {}
    rpc phone_saveCallLog(TL_phone_saveCallLog) returns (Bool) {}
    rpc phone_createConferenceCall(TL_phone_createConferenceCall) returns (phone_PhoneCall) {}
}

service RPCWallpapers {
    rpc account_getWallPapers(TL_account_getWallPapers) returns (account_WallPapers) {}
    rpc account_getWallPaper(TL_account_getWallPaper) returns (WallPaper) {}
    rpc account_uploadWallPaper(TL_account_uploadWallPaper) returns (WallPaper) {}
    rpc account_saveWallPaper(TL_account_saveWallPaper) returns (Bool) {}
    rpc account_installWallPaper(TL_account_installWallPaper) returns (Bool) {}
    rpc account_resetWallPapers(TL_account_resetWallPapers) returns (Bool) {}
    rpc account_getMultiWallPapers(TL_account_getMultiWallPapers) returns (Vector_WallPaper) {}
    rpc messages_setChatWallPaper(TL_messages_setChatWallPaper) returns (Updates) {}
}

service RPCWebPage {
    rpc messages_getWebPagePreview570D6F6F(TL_messages_getWebPagePreview570D6F6F) returns (messages_WebPagePreview) {}
    rpc messages_getWebPage8D9692A3(TL_messages_getWebPage8D9692A3) returns (messages_WebPage) {}
    rpc messages_getWebPagePreview8B68B0CC(TL_messages_getWebPagePreview8B68B0CC) returns (MessageMedia) {}
    rpc messages_getWebPage32CA8F91(TL_messages_getWebPage32CA8F91) returns (WebPage) {}
}

service RPCBiz {
    rpc biz_invokeBizDataRaw(TL_biz_invokeBizDataRaw) returns (BizDataRaw) {}
}

